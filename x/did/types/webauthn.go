// Package types provides x/did module types that delegate WebAuthn validation
// to the centralized types/webauthn package to eliminate circular dependencies.
//
// All WebAuthn validation logic has been moved to types/webauthn/sonr_validation.go
// to leverage the full WebAuthn protocol stack while maintaining API compatibility.
package types

import (
	webauthnvalidation "github.com/sonr-io/sonr/types/webauthn"
)

// WebAuthnCredential automatically implements the WebAuthnCredential interface
// through the getter methods generated by protobuf (GetCredentialId, GetPublicKey, etc.)
// This provides compatibility with the centralized validation functions in types/webauthn

// ValidateStructure validates a WebAuthn credential for gasless transaction processing.
// This method delegates to the centralized validation logic in types/webauthn package.
//
// DEPRECATED: This method delegates to webauthnvalidation.ValidateStructure.
// New code should import types/webauthn and use ValidateStructure directly.
func (c *WebAuthnCredential) ValidateStructure() error {
	return webauthnvalidation.ValidateStructure(c)
}

// ValidateAttestation performs security validation of WebAuthn credential data.
// This method delegates to the centralized validation logic in types/webauthn package.
//
// DEPRECATED: This method delegates to webauthnvalidation.ValidateAttestation.
// New code should import types/webauthn and use ValidateAttestation directly.
func (c *WebAuthnCredential) ValidateAttestation(challenge, expectedOrigin string) error {
	return webauthnvalidation.ValidateAttestation(c, challenge, expectedOrigin)
}

// ValidateForGaslessRegistration performs comprehensive validation for gasless WebAuthn registration.
// This method delegates to the centralized validation logic in types/webauthn package.
//
// DEPRECATED: This method delegates to webauthnvalidation.ValidateForGaslessRegistration.
// New code should import types/webauthn and use ValidateForGaslessRegistration directly.
func (c *WebAuthnCredential) ValidateForGaslessRegistration(
	challenge, expectedOrigin string,
) error {
	return webauthnvalidation.ValidateForGaslessRegistration(c, challenge, expectedOrigin)
}

// Utility functions that delegate to types/webauthn for enhanced functionality

// ValidateCredentialUniqueness validates that a WebAuthn credential is unique across the system.
func ValidateCredentialUniqueness(credentialID string, existingCredentials []string) error {
	return webauthnvalidation.ValidateCredentialUniqueness(credentialID, existingCredentials)
}

// ValidateAlgorithmSupport validates that the specified algorithm is supported.
func ValidateAlgorithmSupport(algorithm int32) error {
	return webauthnvalidation.ValidateAlgorithmSupport(algorithm)
}

// ValidateAttestationObjectFormat validates the attestation object format using full WebAuthn protocol.
func ValidateAttestationObjectFormat(attestationObject string) error {
	return webauthnvalidation.ValidateAttestationObjectFormat(attestationObject)
}

// ValidateClientDataJSONFormat validates the client data JSON format using WebAuthn protocol structures.
func ValidateClientDataJSONFormat(clientDataJSON string) (*webauthnvalidation.ClientData, error) {
	return webauthnvalidation.ValidateClientDataJSONFormat(clientDataJSON)
}

// ValidateWithProtocol has been moved to types/webauthn package
// Use webauthnvalidation.ValidateWithProtocol directly with centralized WebAuthn credentials

// Service binding validation functions have been moved to types/webauthn package
// Use webauthnvalidation.ValidateServiceBinding and webauthnvalidation.ValidateCredentialForDomain directly

// Legacy ClientData type for backward compatibility
// DEPRECATED: Use webauthnvalidation.ClientData instead
type ClientData struct {
	Type      string `json:"type"`
	Challenge string `json:"challenge"`
	Origin    string `json:"origin"`
}

// parseClientDataJSON functionality has been moved to types/webauthn package
// Use webauthnvalidation.ValidateClientDataJSONFormat instead

// Helper functions that maintain API compatibility while delegating to types/webauthn

// GenerateAddressFromCredential generates a deterministic address from a WebAuthn credential ID.
func GenerateAddressFromCredential(credentialID string) string {
	// Import the utility package for address generation
	return webauthnvalidation.GenerateAddressFromCredential(credentialID).String()
}

// GenerateDIDFromCredential generates a deterministic DID from a WebAuthn credential.
func GenerateDIDFromCredential(credentialID string, username string) string {
	return webauthnvalidation.GenerateDIDFromCredential(credentialID, username)
}
