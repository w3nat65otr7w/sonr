@go.Package { name = "github.com/onsonr/sonr/internal/orm/browser" }

module browser

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.5.0#/go.pkl"


class JsonField extends go.Field {
  structTags {
    ["json"] = "%{name},omitempty"
  }
}

class PublicKeyCredentialRequestOptions {
  challenge: String
  timeout: Int
  rpId: String
  allowCredentials: List<PublicKeyCredentialDescriptor>
  userVerification: String
  extensions: List<PublicKeyCredentialParameters>
}

class PublicKeyCredentialDescriptor {
  id: String
  transports: List<String>
  type: String
}

class PublicKeyCredentialParameters {
  type: String
  alg: Int?
}

class AuthenticatorSelectionCriteria {
  authenticatorAttachment: String
  requireResidentKey: Boolean
  userVerification: String
}


class PublicKeyCredentialCreationOptions {
  rp: RpEntity
  user: UserEntity
  challenge: String
  pubKeyCredParams: List<PublicKeyCredentialParameters>
  timeout: Int
  excludeCredentials: List<PublicKeyCredentialDescriptor>
  authenticatorSelection: AuthenticatorSelectionCriteria?
  attestation: String
  extensions: List<PublicKeyCredentialParameters>
}

class RpEntity {
  id: String
  name: String?
  icon: String?
}

class UserEntity {
  id: String
  displayName: String?
  name: String?
}

class SWT {
  origin: String
  location: String
  identifier: String
  scopes: List<String>
  properties: Map<String, String>
  expiryBlock: Int
}
