# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
---
version: 2
dist: dist/snrd
monorepo:
  tag_prefix: snrd/

project_name: snrd

before:
  hooks:
    - go mod download

builds:
  # Darwin AMD64 Build
  - id: snrd-darwin-amd64
    main: ./cmd/snrd
    binary: snrd
    mod_timestamp: "{{ .CommitTimestamp }}"
    env:
      - CGO_ENABLED=1
      - CC=o64-clang
      - CXX=o64-clang++
      - CGO_LDFLAGS=-lm
    goos:
      - darwin
    goarch:
      - amd64
    flags:
      - -mod=readonly
      - -trimpath
    ldflags:
      - -X github.com/cosmos/cosmos-sdk/version.Name=sonr
      - -X github.com/cosmos/cosmos-sdk/version.AppName=snrd
      - -X github.com/cosmos/cosmos-sdk/version.Version={{.Version}}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{.Commit}}
      - -X "github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger"
      - -s -w
    tags:
      - netgo
      - ledger

  # Darwin ARM64 Build
  - id: snrd-darwin-arm64
    main: ./cmd/snrd
    binary: snrd
    mod_timestamp: "{{ .CommitTimestamp }}"
    env:
      - CGO_ENABLED=1
      - CC=oa64-clang
      - CXX=oa64-clang++
      - CGO_LDFLAGS=-lm
    goos:
      - darwin
    goarch:
      - arm64
    flags:
      - -mod=readonly
      - -trimpath
    ldflags:
      - -X github.com/cosmos/cosmos-sdk/version.Name=sonr
      - -X github.com/cosmos/cosmos-sdk/version.AppName=snrd
      - -X github.com/cosmos/cosmos-sdk/version.Version={{.Version}}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{.Commit}}
      - -X "github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger"
      - -s -w
    tags:
      - netgo
      - ledger

  # Linux AMD64 Build
  - id: snrd-linux-amd64
    main: ./cmd/snrd
    binary: snrd
    mod_timestamp: "{{ .CommitTimestamp }}"
    env:
      - CGO_ENABLED=1
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
      - CGO_LDFLAGS=-lm
    goos:
      - linux
    goarch:
      - amd64
    goamd64:
      - v1
    flags:
      - -mod=readonly
      - -trimpath
    ldflags:
      - -X github.com/cosmos/cosmos-sdk/version.Name=sonr
      - -X github.com/cosmos/cosmos-sdk/version.AppName=snrd
      - -X github.com/cosmos/cosmos-sdk/version.Version={{.Version}}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{.Commit}}
      - -X "github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger"
      - -s -w
    tags:
      - netgo
      - ledger

  # Linux ARM64 Build
  - id: snrd-linux-arm64
    main: ./cmd/snrd
    binary: snrd
    mod_timestamp: "{{ .CommitTimestamp }}"
    env:
      - CGO_ENABLED=1
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
      - CGO_LDFLAGS=-lm
    goos:
      - linux
    goarch:
      - arm64
    flags:
      - -mod=readonly
      - -trimpath
    ldflags:
      - -X github.com/cosmos/cosmos-sdk/version.Name=sonr
      - -X github.com/cosmos/cosmos-sdk/version.AppName=snrd
      - -X github.com/cosmos/cosmos-sdk/version.Version={{.Version}}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{.Commit}}
      - -X "github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger"
      - -s -w
    tags:
      - netgo
      - ledger

aurs:
  - name: snrd-bin
    disable: true
    homepage: "https://sonr.io"
    description: "Sonr blockchain daemon - decentralized identity and data storage network"
    maintainers:
      - "Sonr <support@sonr.io>"
    license: "Apache-2.0"
    private_key: "{{ .Env.AUR_KEY }}"
    git_url: "ssh://[email protected]/snrd-bin.git"
    skip_upload: auto
    provides:
      - snrd
    conflicts:
      - snrd
    commit_msg_template: "Update to {{ .Tag }}"
    commit_author:
      name: goreleaserbot
      email: "prad@sonr.io"
    package: |-
      # bin
      install -Dm755 "./snrd" "${pkgdir}/usr/bin/snrd"

      # license
      if [ -f "./LICENSE" ]; then
        install -Dm644 "./LICENSE" "${pkgdir}/usr/share/licenses/snrd-bin/LICENSE"
      fi

      # readme
      if [ -f "./README.md" ]; then
        install -Dm644 "./README.md" "${pkgdir}/usr/share/doc/snrd-bin/README.md"
      fi

      # systemd service (if exists)
      if [ -f "./snrd.service" ]; then
        install -Dm644 "./snrd.service" "${pkgdir}/usr/lib/systemd/system/snrd.service"
      fi

      # config directory
      install -dm755 "${pkgdir}/etc/snrd"
      install -dm755 "${pkgdir}/var/lib/snrd"
    backup:
      - /etc/snrd/config.toml
      - /etc/snrd/app.toml

nix:
  - name: snrd
    ids:
      - snrd
    homepage: "https://sonr.io"
    description: "Sonr blockchain daemon - decentralized identity network"
    license: "gpl3Plus"
    path: pkgs/snrd/default.nix
    commit_msg_template: "snrd: {{ .Tag }}"
    dependencies:
      - glibc
      - stdenv.cc.cc.lib
    repository:
      owner: sonr-io
      name: nur
      branch: main
      token: "{{ .Env.GITHUB_TOKEN }}"

archives:
  - id: snrd
    ids:
      - snrd-linux-amd64
      - snrd-linux-arm64
      - snrd-darwin-amd64
      - snrd-darwin-arm64
    name_template: >-
      snrd_{{ .Os }}_{{- if eq .Arch "amd64" }}x86_64 {{- else if eq .Arch "386" }}i386 {{- else }}{{ .Arch }}{{ end }}
    formats: ["tar.gz"]
    files:
      - src: README*
    wrap_in_directory: false

nfpms:
  - id: snrd
    package_name: snrd
    ids:
      - snrd-linux-amd64
      - snrd-linux-arm64
    file_name_template: "snrd_{{ .Os }}_{{ .Arch }}{{ .ConventionalExtension }}"
    vendor: Sonr
    homepage: "https://sonr.io"
    maintainer: "Sonr <support@sonr.io>"
    description: "Sonr is a decentralized, permissionless, and censorship-resistant identity network."
    license: "Apache 2.0"
    formats:
      - rpm
      - deb
      - apk
      - archlinux
    contents:
      - src: README*
        dst: /usr/share/doc/snrd
    bindir: /usr/bin
    section: net
    priority: optional

blobs:
  - provider: s3
    endpoint: https://eb37925850388bca807b7fab964c12bb.r2.cloudflarestorage.com
    bucket: releases
    region: auto
    directory: "snrd/{{ .Tag }}"
    ids:
      - snrd

release:
  disable: false
  github:
    owner: sonr-io
    name: sonr
  name_template: "{{.ProjectName}}/{{ .Tag }}"
  draft: false
  replace_existing_draft: false # Don't replace drafts
  replace_existing_artifacts: false # Append, don't replace
  mode: append # Explicitly set to append mode

checksum:
  name_template: "snrd_checksums.txt"

snapshot:
  version_template: "{{ incpatch .Version }}-dev"

# Changelog configuration
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
