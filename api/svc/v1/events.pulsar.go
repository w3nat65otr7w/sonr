// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package svcv1

import (
	fmt "fmt"
	io "io"
	reflect "reflect"
	sync "sync"

	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

var (
	md_EventDomainVerificationInitiated                 protoreflect.MessageDescriptor
	fd_EventDomainVerificationInitiated_domain          protoreflect.FieldDescriptor
	fd_EventDomainVerificationInitiated_verification_id protoreflect.FieldDescriptor
	fd_EventDomainVerificationInitiated_challenge       protoreflect.FieldDescriptor
	fd_EventDomainVerificationInitiated_initiator       protoreflect.FieldDescriptor
	fd_EventDomainVerificationInitiated_block_height    protoreflect.FieldDescriptor
)

func init() {
	file_svc_v1_events_proto_init()
	md_EventDomainVerificationInitiated = File_svc_v1_events_proto.Messages().ByName("EventDomainVerificationInitiated")
	fd_EventDomainVerificationInitiated_domain = md_EventDomainVerificationInitiated.Fields().ByName("domain")
	fd_EventDomainVerificationInitiated_verification_id = md_EventDomainVerificationInitiated.Fields().ByName("verification_id")
	fd_EventDomainVerificationInitiated_challenge = md_EventDomainVerificationInitiated.Fields().ByName("challenge")
	fd_EventDomainVerificationInitiated_initiator = md_EventDomainVerificationInitiated.Fields().ByName("initiator")
	fd_EventDomainVerificationInitiated_block_height = md_EventDomainVerificationInitiated.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_EventDomainVerificationInitiated)(nil)

type fastReflection_EventDomainVerificationInitiated EventDomainVerificationInitiated

func (x *EventDomainVerificationInitiated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventDomainVerificationInitiated)(x)
}

func (x *EventDomainVerificationInitiated) slowProtoReflect() protoreflect.Message {
	mi := &file_svc_v1_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventDomainVerificationInitiated_messageType fastReflection_EventDomainVerificationInitiated_messageType
var _ protoreflect.MessageType = fastReflection_EventDomainVerificationInitiated_messageType{}

type fastReflection_EventDomainVerificationInitiated_messageType struct{}

func (x fastReflection_EventDomainVerificationInitiated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventDomainVerificationInitiated)(nil)
}
func (x fastReflection_EventDomainVerificationInitiated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventDomainVerificationInitiated)
}
func (x fastReflection_EventDomainVerificationInitiated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventDomainVerificationInitiated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventDomainVerificationInitiated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventDomainVerificationInitiated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventDomainVerificationInitiated) Type() protoreflect.MessageType {
	return _fastReflection_EventDomainVerificationInitiated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventDomainVerificationInitiated) New() protoreflect.Message {
	return new(fastReflection_EventDomainVerificationInitiated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventDomainVerificationInitiated) Interface() protoreflect.ProtoMessage {
	return (*EventDomainVerificationInitiated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventDomainVerificationInitiated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Domain != "" {
		value := protoreflect.ValueOfString(x.Domain)
		if !f(fd_EventDomainVerificationInitiated_domain, value) {
			return
		}
	}
	if x.VerificationId != "" {
		value := protoreflect.ValueOfString(x.VerificationId)
		if !f(fd_EventDomainVerificationInitiated_verification_id, value) {
			return
		}
	}
	if x.Challenge != "" {
		value := protoreflect.ValueOfString(x.Challenge)
		if !f(fd_EventDomainVerificationInitiated_challenge, value) {
			return
		}
	}
	if x.Initiator != "" {
		value := protoreflect.ValueOfString(x.Initiator)
		if !f(fd_EventDomainVerificationInitiated_initiator, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_EventDomainVerificationInitiated_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventDomainVerificationInitiated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "svc.v1.EventDomainVerificationInitiated.domain":
		return x.Domain != ""
	case "svc.v1.EventDomainVerificationInitiated.verification_id":
		return x.VerificationId != ""
	case "svc.v1.EventDomainVerificationInitiated.challenge":
		return x.Challenge != ""
	case "svc.v1.EventDomainVerificationInitiated.initiator":
		return x.Initiator != ""
	case "svc.v1.EventDomainVerificationInitiated.block_height":
		return x.BlockHeight != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerificationInitiated"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerificationInitiated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventDomainVerificationInitiated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "svc.v1.EventDomainVerificationInitiated.domain":
		x.Domain = ""
	case "svc.v1.EventDomainVerificationInitiated.verification_id":
		x.VerificationId = ""
	case "svc.v1.EventDomainVerificationInitiated.challenge":
		x.Challenge = ""
	case "svc.v1.EventDomainVerificationInitiated.initiator":
		x.Initiator = ""
	case "svc.v1.EventDomainVerificationInitiated.block_height":
		x.BlockHeight = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerificationInitiated"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerificationInitiated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventDomainVerificationInitiated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "svc.v1.EventDomainVerificationInitiated.domain":
		value := x.Domain
		return protoreflect.ValueOfString(value)
	case "svc.v1.EventDomainVerificationInitiated.verification_id":
		value := x.VerificationId
		return protoreflect.ValueOfString(value)
	case "svc.v1.EventDomainVerificationInitiated.challenge":
		value := x.Challenge
		return protoreflect.ValueOfString(value)
	case "svc.v1.EventDomainVerificationInitiated.initiator":
		value := x.Initiator
		return protoreflect.ValueOfString(value)
	case "svc.v1.EventDomainVerificationInitiated.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerificationInitiated"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerificationInitiated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventDomainVerificationInitiated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "svc.v1.EventDomainVerificationInitiated.domain":
		x.Domain = value.Interface().(string)
	case "svc.v1.EventDomainVerificationInitiated.verification_id":
		x.VerificationId = value.Interface().(string)
	case "svc.v1.EventDomainVerificationInitiated.challenge":
		x.Challenge = value.Interface().(string)
	case "svc.v1.EventDomainVerificationInitiated.initiator":
		x.Initiator = value.Interface().(string)
	case "svc.v1.EventDomainVerificationInitiated.block_height":
		x.BlockHeight = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerificationInitiated"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerificationInitiated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventDomainVerificationInitiated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "svc.v1.EventDomainVerificationInitiated.domain":
		panic(fmt.Errorf("field domain of message svc.v1.EventDomainVerificationInitiated is not mutable"))
	case "svc.v1.EventDomainVerificationInitiated.verification_id":
		panic(fmt.Errorf("field verification_id of message svc.v1.EventDomainVerificationInitiated is not mutable"))
	case "svc.v1.EventDomainVerificationInitiated.challenge":
		panic(fmt.Errorf("field challenge of message svc.v1.EventDomainVerificationInitiated is not mutable"))
	case "svc.v1.EventDomainVerificationInitiated.initiator":
		panic(fmt.Errorf("field initiator of message svc.v1.EventDomainVerificationInitiated is not mutable"))
	case "svc.v1.EventDomainVerificationInitiated.block_height":
		panic(fmt.Errorf("field block_height of message svc.v1.EventDomainVerificationInitiated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerificationInitiated"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerificationInitiated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventDomainVerificationInitiated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "svc.v1.EventDomainVerificationInitiated.domain":
		return protoreflect.ValueOfString("")
	case "svc.v1.EventDomainVerificationInitiated.verification_id":
		return protoreflect.ValueOfString("")
	case "svc.v1.EventDomainVerificationInitiated.challenge":
		return protoreflect.ValueOfString("")
	case "svc.v1.EventDomainVerificationInitiated.initiator":
		return protoreflect.ValueOfString("")
	case "svc.v1.EventDomainVerificationInitiated.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerificationInitiated"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerificationInitiated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventDomainVerificationInitiated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in svc.v1.EventDomainVerificationInitiated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventDomainVerificationInitiated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventDomainVerificationInitiated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventDomainVerificationInitiated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventDomainVerificationInitiated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventDomainVerificationInitiated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Domain)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.VerificationId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Challenge)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Initiator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventDomainVerificationInitiated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Initiator) > 0 {
			i -= len(x.Initiator)
			copy(dAtA[i:], x.Initiator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Initiator)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Challenge) > 0 {
			i -= len(x.Challenge)
			copy(dAtA[i:], x.Challenge)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Challenge)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.VerificationId) > 0 {
			i -= len(x.VerificationId)
			copy(dAtA[i:], x.VerificationId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VerificationId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Domain) > 0 {
			i -= len(x.Domain)
			copy(dAtA[i:], x.Domain)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Domain)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventDomainVerificationInitiated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventDomainVerificationInitiated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventDomainVerificationInitiated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Domain", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Domain = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VerificationId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VerificationId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Challenge", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Challenge = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Initiator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Initiator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventDomainVerified                 protoreflect.MessageDescriptor
	fd_EventDomainVerified_domain          protoreflect.FieldDescriptor
	fd_EventDomainVerified_verification_id protoreflect.FieldDescriptor
	fd_EventDomainVerified_verifier        protoreflect.FieldDescriptor
	fd_EventDomainVerified_verified_at     protoreflect.FieldDescriptor
	fd_EventDomainVerified_block_height    protoreflect.FieldDescriptor
)

func init() {
	file_svc_v1_events_proto_init()
	md_EventDomainVerified = File_svc_v1_events_proto.Messages().ByName("EventDomainVerified")
	fd_EventDomainVerified_domain = md_EventDomainVerified.Fields().ByName("domain")
	fd_EventDomainVerified_verification_id = md_EventDomainVerified.Fields().ByName("verification_id")
	fd_EventDomainVerified_verifier = md_EventDomainVerified.Fields().ByName("verifier")
	fd_EventDomainVerified_verified_at = md_EventDomainVerified.Fields().ByName("verified_at")
	fd_EventDomainVerified_block_height = md_EventDomainVerified.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_EventDomainVerified)(nil)

type fastReflection_EventDomainVerified EventDomainVerified

func (x *EventDomainVerified) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventDomainVerified)(x)
}

func (x *EventDomainVerified) slowProtoReflect() protoreflect.Message {
	mi := &file_svc_v1_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventDomainVerified_messageType fastReflection_EventDomainVerified_messageType
var _ protoreflect.MessageType = fastReflection_EventDomainVerified_messageType{}

type fastReflection_EventDomainVerified_messageType struct{}

func (x fastReflection_EventDomainVerified_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventDomainVerified)(nil)
}
func (x fastReflection_EventDomainVerified_messageType) New() protoreflect.Message {
	return new(fastReflection_EventDomainVerified)
}
func (x fastReflection_EventDomainVerified_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventDomainVerified
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventDomainVerified) Descriptor() protoreflect.MessageDescriptor {
	return md_EventDomainVerified
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventDomainVerified) Type() protoreflect.MessageType {
	return _fastReflection_EventDomainVerified_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventDomainVerified) New() protoreflect.Message {
	return new(fastReflection_EventDomainVerified)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventDomainVerified) Interface() protoreflect.ProtoMessage {
	return (*EventDomainVerified)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventDomainVerified) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Domain != "" {
		value := protoreflect.ValueOfString(x.Domain)
		if !f(fd_EventDomainVerified_domain, value) {
			return
		}
	}
	if x.VerificationId != "" {
		value := protoreflect.ValueOfString(x.VerificationId)
		if !f(fd_EventDomainVerified_verification_id, value) {
			return
		}
	}
	if x.Verifier != "" {
		value := protoreflect.ValueOfString(x.Verifier)
		if !f(fd_EventDomainVerified_verifier, value) {
			return
		}
	}
	if x.VerifiedAt != nil {
		value := protoreflect.ValueOfMessage(x.VerifiedAt.ProtoReflect())
		if !f(fd_EventDomainVerified_verified_at, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_EventDomainVerified_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventDomainVerified) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "svc.v1.EventDomainVerified.domain":
		return x.Domain != ""
	case "svc.v1.EventDomainVerified.verification_id":
		return x.VerificationId != ""
	case "svc.v1.EventDomainVerified.verifier":
		return x.Verifier != ""
	case "svc.v1.EventDomainVerified.verified_at":
		return x.VerifiedAt != nil
	case "svc.v1.EventDomainVerified.block_height":
		return x.BlockHeight != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerified"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerified does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventDomainVerified) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "svc.v1.EventDomainVerified.domain":
		x.Domain = ""
	case "svc.v1.EventDomainVerified.verification_id":
		x.VerificationId = ""
	case "svc.v1.EventDomainVerified.verifier":
		x.Verifier = ""
	case "svc.v1.EventDomainVerified.verified_at":
		x.VerifiedAt = nil
	case "svc.v1.EventDomainVerified.block_height":
		x.BlockHeight = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerified"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerified does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventDomainVerified) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "svc.v1.EventDomainVerified.domain":
		value := x.Domain
		return protoreflect.ValueOfString(value)
	case "svc.v1.EventDomainVerified.verification_id":
		value := x.VerificationId
		return protoreflect.ValueOfString(value)
	case "svc.v1.EventDomainVerified.verifier":
		value := x.Verifier
		return protoreflect.ValueOfString(value)
	case "svc.v1.EventDomainVerified.verified_at":
		value := x.VerifiedAt
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "svc.v1.EventDomainVerified.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerified"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerified does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventDomainVerified) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "svc.v1.EventDomainVerified.domain":
		x.Domain = value.Interface().(string)
	case "svc.v1.EventDomainVerified.verification_id":
		x.VerificationId = value.Interface().(string)
	case "svc.v1.EventDomainVerified.verifier":
		x.Verifier = value.Interface().(string)
	case "svc.v1.EventDomainVerified.verified_at":
		x.VerifiedAt = value.Message().Interface().(*timestamppb.Timestamp)
	case "svc.v1.EventDomainVerified.block_height":
		x.BlockHeight = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerified"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerified does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventDomainVerified) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "svc.v1.EventDomainVerified.verified_at":
		if x.VerifiedAt == nil {
			x.VerifiedAt = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.VerifiedAt.ProtoReflect())
	case "svc.v1.EventDomainVerified.domain":
		panic(fmt.Errorf("field domain of message svc.v1.EventDomainVerified is not mutable"))
	case "svc.v1.EventDomainVerified.verification_id":
		panic(fmt.Errorf("field verification_id of message svc.v1.EventDomainVerified is not mutable"))
	case "svc.v1.EventDomainVerified.verifier":
		panic(fmt.Errorf("field verifier of message svc.v1.EventDomainVerified is not mutable"))
	case "svc.v1.EventDomainVerified.block_height":
		panic(fmt.Errorf("field block_height of message svc.v1.EventDomainVerified is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerified"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerified does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventDomainVerified) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "svc.v1.EventDomainVerified.domain":
		return protoreflect.ValueOfString("")
	case "svc.v1.EventDomainVerified.verification_id":
		return protoreflect.ValueOfString("")
	case "svc.v1.EventDomainVerified.verifier":
		return protoreflect.ValueOfString("")
	case "svc.v1.EventDomainVerified.verified_at":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "svc.v1.EventDomainVerified.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventDomainVerified"))
		}
		panic(fmt.Errorf("message svc.v1.EventDomainVerified does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventDomainVerified) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in svc.v1.EventDomainVerified", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventDomainVerified) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventDomainVerified) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventDomainVerified) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventDomainVerified) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventDomainVerified)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Domain)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.VerificationId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Verifier)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.VerifiedAt != nil {
			l = options.Size(x.VerifiedAt)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventDomainVerified)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x28
		}
		if x.VerifiedAt != nil {
			encoded, err := options.Marshal(x.VerifiedAt)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Verifier) > 0 {
			i -= len(x.Verifier)
			copy(dAtA[i:], x.Verifier)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Verifier)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.VerificationId) > 0 {
			i -= len(x.VerificationId)
			copy(dAtA[i:], x.VerificationId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VerificationId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Domain) > 0 {
			i -= len(x.Domain)
			copy(dAtA[i:], x.Domain)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Domain)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventDomainVerified)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventDomainVerified: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventDomainVerified: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Domain", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Domain = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VerificationId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VerificationId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Verifier", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Verifier = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VerifiedAt", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.VerifiedAt == nil {
					x.VerifiedAt = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VerifiedAt); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventServiceRegistered_4_list)(nil)

type _EventServiceRegistered_4_list struct {
	list *[]string
}

func (x *_EventServiceRegistered_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventServiceRegistered_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EventServiceRegistered_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventServiceRegistered_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventServiceRegistered_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventServiceRegistered at list field Endpoints as it is not of Message kind"))
}

func (x *_EventServiceRegistered_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventServiceRegistered_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EventServiceRegistered_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventServiceRegistered              protoreflect.MessageDescriptor
	fd_EventServiceRegistered_service_id   protoreflect.FieldDescriptor
	fd_EventServiceRegistered_domain       protoreflect.FieldDescriptor
	fd_EventServiceRegistered_owner        protoreflect.FieldDescriptor
	fd_EventServiceRegistered_endpoints    protoreflect.FieldDescriptor
	fd_EventServiceRegistered_metadata     protoreflect.FieldDescriptor
	fd_EventServiceRegistered_block_height protoreflect.FieldDescriptor
)

func init() {
	file_svc_v1_events_proto_init()
	md_EventServiceRegistered = File_svc_v1_events_proto.Messages().ByName("EventServiceRegistered")
	fd_EventServiceRegistered_service_id = md_EventServiceRegistered.Fields().ByName("service_id")
	fd_EventServiceRegistered_domain = md_EventServiceRegistered.Fields().ByName("domain")
	fd_EventServiceRegistered_owner = md_EventServiceRegistered.Fields().ByName("owner")
	fd_EventServiceRegistered_endpoints = md_EventServiceRegistered.Fields().ByName("endpoints")
	fd_EventServiceRegistered_metadata = md_EventServiceRegistered.Fields().ByName("metadata")
	fd_EventServiceRegistered_block_height = md_EventServiceRegistered.Fields().ByName("block_height")
}

var _ protoreflect.Message = (*fastReflection_EventServiceRegistered)(nil)

type fastReflection_EventServiceRegistered EventServiceRegistered

func (x *EventServiceRegistered) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventServiceRegistered)(x)
}

func (x *EventServiceRegistered) slowProtoReflect() protoreflect.Message {
	mi := &file_svc_v1_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventServiceRegistered_messageType fastReflection_EventServiceRegistered_messageType
var _ protoreflect.MessageType = fastReflection_EventServiceRegistered_messageType{}

type fastReflection_EventServiceRegistered_messageType struct{}

func (x fastReflection_EventServiceRegistered_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventServiceRegistered)(nil)
}
func (x fastReflection_EventServiceRegistered_messageType) New() protoreflect.Message {
	return new(fastReflection_EventServiceRegistered)
}
func (x fastReflection_EventServiceRegistered_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventServiceRegistered
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventServiceRegistered) Descriptor() protoreflect.MessageDescriptor {
	return md_EventServiceRegistered
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventServiceRegistered) Type() protoreflect.MessageType {
	return _fastReflection_EventServiceRegistered_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventServiceRegistered) New() protoreflect.Message {
	return new(fastReflection_EventServiceRegistered)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventServiceRegistered) Interface() protoreflect.ProtoMessage {
	return (*EventServiceRegistered)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventServiceRegistered) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ServiceId != "" {
		value := protoreflect.ValueOfString(x.ServiceId)
		if !f(fd_EventServiceRegistered_service_id, value) {
			return
		}
	}
	if x.Domain != "" {
		value := protoreflect.ValueOfString(x.Domain)
		if !f(fd_EventServiceRegistered_domain, value) {
			return
		}
	}
	if x.Owner != "" {
		value := protoreflect.ValueOfString(x.Owner)
		if !f(fd_EventServiceRegistered_owner, value) {
			return
		}
	}
	if len(x.Endpoints) != 0 {
		value := protoreflect.ValueOfList(&_EventServiceRegistered_4_list{list: &x.Endpoints})
		if !f(fd_EventServiceRegistered_endpoints, value) {
			return
		}
	}
	if x.Metadata != "" {
		value := protoreflect.ValueOfString(x.Metadata)
		if !f(fd_EventServiceRegistered_metadata, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_EventServiceRegistered_block_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventServiceRegistered) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "svc.v1.EventServiceRegistered.service_id":
		return x.ServiceId != ""
	case "svc.v1.EventServiceRegistered.domain":
		return x.Domain != ""
	case "svc.v1.EventServiceRegistered.owner":
		return x.Owner != ""
	case "svc.v1.EventServiceRegistered.endpoints":
		return len(x.Endpoints) != 0
	case "svc.v1.EventServiceRegistered.metadata":
		return x.Metadata != ""
	case "svc.v1.EventServiceRegistered.block_height":
		return x.BlockHeight != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventServiceRegistered"))
		}
		panic(fmt.Errorf("message svc.v1.EventServiceRegistered does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventServiceRegistered) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "svc.v1.EventServiceRegistered.service_id":
		x.ServiceId = ""
	case "svc.v1.EventServiceRegistered.domain":
		x.Domain = ""
	case "svc.v1.EventServiceRegistered.owner":
		x.Owner = ""
	case "svc.v1.EventServiceRegistered.endpoints":
		x.Endpoints = nil
	case "svc.v1.EventServiceRegistered.metadata":
		x.Metadata = ""
	case "svc.v1.EventServiceRegistered.block_height":
		x.BlockHeight = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventServiceRegistered"))
		}
		panic(fmt.Errorf("message svc.v1.EventServiceRegistered does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventServiceRegistered) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "svc.v1.EventServiceRegistered.service_id":
		value := x.ServiceId
		return protoreflect.ValueOfString(value)
	case "svc.v1.EventServiceRegistered.domain":
		value := x.Domain
		return protoreflect.ValueOfString(value)
	case "svc.v1.EventServiceRegistered.owner":
		value := x.Owner
		return protoreflect.ValueOfString(value)
	case "svc.v1.EventServiceRegistered.endpoints":
		if len(x.Endpoints) == 0 {
			return protoreflect.ValueOfList(&_EventServiceRegistered_4_list{})
		}
		listValue := &_EventServiceRegistered_4_list{list: &x.Endpoints}
		return protoreflect.ValueOfList(listValue)
	case "svc.v1.EventServiceRegistered.metadata":
		value := x.Metadata
		return protoreflect.ValueOfString(value)
	case "svc.v1.EventServiceRegistered.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventServiceRegistered"))
		}
		panic(fmt.Errorf("message svc.v1.EventServiceRegistered does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventServiceRegistered) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "svc.v1.EventServiceRegistered.service_id":
		x.ServiceId = value.Interface().(string)
	case "svc.v1.EventServiceRegistered.domain":
		x.Domain = value.Interface().(string)
	case "svc.v1.EventServiceRegistered.owner":
		x.Owner = value.Interface().(string)
	case "svc.v1.EventServiceRegistered.endpoints":
		lv := value.List()
		clv := lv.(*_EventServiceRegistered_4_list)
		x.Endpoints = *clv.list
	case "svc.v1.EventServiceRegistered.metadata":
		x.Metadata = value.Interface().(string)
	case "svc.v1.EventServiceRegistered.block_height":
		x.BlockHeight = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventServiceRegistered"))
		}
		panic(fmt.Errorf("message svc.v1.EventServiceRegistered does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventServiceRegistered) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "svc.v1.EventServiceRegistered.endpoints":
		if x.Endpoints == nil {
			x.Endpoints = []string{}
		}
		value := &_EventServiceRegistered_4_list{list: &x.Endpoints}
		return protoreflect.ValueOfList(value)
	case "svc.v1.EventServiceRegistered.service_id":
		panic(fmt.Errorf("field service_id of message svc.v1.EventServiceRegistered is not mutable"))
	case "svc.v1.EventServiceRegistered.domain":
		panic(fmt.Errorf("field domain of message svc.v1.EventServiceRegistered is not mutable"))
	case "svc.v1.EventServiceRegistered.owner":
		panic(fmt.Errorf("field owner of message svc.v1.EventServiceRegistered is not mutable"))
	case "svc.v1.EventServiceRegistered.metadata":
		panic(fmt.Errorf("field metadata of message svc.v1.EventServiceRegistered is not mutable"))
	case "svc.v1.EventServiceRegistered.block_height":
		panic(fmt.Errorf("field block_height of message svc.v1.EventServiceRegistered is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventServiceRegistered"))
		}
		panic(fmt.Errorf("message svc.v1.EventServiceRegistered does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventServiceRegistered) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "svc.v1.EventServiceRegistered.service_id":
		return protoreflect.ValueOfString("")
	case "svc.v1.EventServiceRegistered.domain":
		return protoreflect.ValueOfString("")
	case "svc.v1.EventServiceRegistered.owner":
		return protoreflect.ValueOfString("")
	case "svc.v1.EventServiceRegistered.endpoints":
		list := []string{}
		return protoreflect.ValueOfList(&_EventServiceRegistered_4_list{list: &list})
	case "svc.v1.EventServiceRegistered.metadata":
		return protoreflect.ValueOfString("")
	case "svc.v1.EventServiceRegistered.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: svc.v1.EventServiceRegistered"))
		}
		panic(fmt.Errorf("message svc.v1.EventServiceRegistered does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventServiceRegistered) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in svc.v1.EventServiceRegistered", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventServiceRegistered) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventServiceRegistered) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventServiceRegistered) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventServiceRegistered) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventServiceRegistered)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ServiceId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Domain)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Owner)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Endpoints) > 0 {
			for _, s := range x.Endpoints {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Metadata)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventServiceRegistered)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Metadata) > 0 {
			i -= len(x.Metadata)
			copy(dAtA[i:], x.Metadata)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Metadata)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Endpoints) > 0 {
			for iNdEx := len(x.Endpoints) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Endpoints[iNdEx])
				copy(dAtA[i:], x.Endpoints[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Endpoints[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.Owner) > 0 {
			i -= len(x.Owner)
			copy(dAtA[i:], x.Owner)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Owner)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Domain) > 0 {
			i -= len(x.Domain)
			copy(dAtA[i:], x.Domain)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Domain)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ServiceId) > 0 {
			i -= len(x.ServiceId)
			copy(dAtA[i:], x.ServiceId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ServiceId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventServiceRegistered)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventServiceRegistered: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventServiceRegistered: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ServiceId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ServiceId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Domain", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Domain = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Owner = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Endpoints", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Endpoints = append(x.Endpoints, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Metadata = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: svc/v1/events.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventDomainVerificationInitiated is emitted when domain verification is initiated
type EventDomainVerificationInitiated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Domain being verified
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// Verification ID
	VerificationId string `protobuf:"bytes,2,opt,name=verification_id,json=verificationId,proto3" json:"verification_id,omitempty"`
	// Verification challenge
	Challenge string `protobuf:"bytes,3,opt,name=challenge,proto3" json:"challenge,omitempty"`
	// Initiator address
	Initiator string `protobuf:"bytes,4,opt,name=initiator,proto3" json:"initiator,omitempty"`
	// Block height
	BlockHeight uint64 `protobuf:"varint,5,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *EventDomainVerificationInitiated) Reset() {
	*x = EventDomainVerificationInitiated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_v1_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDomainVerificationInitiated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDomainVerificationInitiated) ProtoMessage() {}

// Deprecated: Use EventDomainVerificationInitiated.ProtoReflect.Descriptor instead.
func (*EventDomainVerificationInitiated) Descriptor() ([]byte, []int) {
	return file_svc_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *EventDomainVerificationInitiated) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *EventDomainVerificationInitiated) GetVerificationId() string {
	if x != nil {
		return x.VerificationId
	}
	return ""
}

func (x *EventDomainVerificationInitiated) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

func (x *EventDomainVerificationInitiated) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *EventDomainVerificationInitiated) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

// EventDomainVerified is emitted when a domain is successfully verified
type EventDomainVerified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Domain that was verified
	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	// Verification ID
	VerificationId string `protobuf:"bytes,2,opt,name=verification_id,json=verificationId,proto3" json:"verification_id,omitempty"`
	// Verifier address
	Verifier string `protobuf:"bytes,3,opt,name=verifier,proto3" json:"verifier,omitempty"`
	// Verification timestamp
	VerifiedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=verified_at,json=verifiedAt,proto3" json:"verified_at,omitempty"`
	// Block height
	BlockHeight uint64 `protobuf:"varint,5,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *EventDomainVerified) Reset() {
	*x = EventDomainVerified{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_v1_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDomainVerified) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDomainVerified) ProtoMessage() {}

// Deprecated: Use EventDomainVerified.ProtoReflect.Descriptor instead.
func (*EventDomainVerified) Descriptor() ([]byte, []int) {
	return file_svc_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *EventDomainVerified) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *EventDomainVerified) GetVerificationId() string {
	if x != nil {
		return x.VerificationId
	}
	return ""
}

func (x *EventDomainVerified) GetVerifier() string {
	if x != nil {
		return x.Verifier
	}
	return ""
}

func (x *EventDomainVerified) GetVerifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.VerifiedAt
	}
	return nil
}

func (x *EventDomainVerified) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

// EventServiceRegistered is emitted when a service is registered
type EventServiceRegistered struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service ID
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Associated domain
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// Owner DID
	Owner string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	// Service endpoints
	Endpoints []string `protobuf:"bytes,4,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	// Service metadata (JSON string)
	Metadata string `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Block height
	BlockHeight uint64 `protobuf:"varint,6,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
}

func (x *EventServiceRegistered) Reset() {
	*x = EventServiceRegistered{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svc_v1_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventServiceRegistered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventServiceRegistered) ProtoMessage() {}

// Deprecated: Use EventServiceRegistered.ProtoReflect.Descriptor instead.
func (*EventServiceRegistered) Descriptor() ([]byte, []int) {
	return file_svc_v1_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventServiceRegistered) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *EventServiceRegistered) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *EventServiceRegistered) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *EventServiceRegistered) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *EventServiceRegistered) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *EventServiceRegistered) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

var File_svc_v1_events_proto protoreflect.FileDescriptor

var file_svc_v1_events_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x01, 0x0a, 0x20, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x13, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x45,
	0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xc2, 0x01, 0x0a, 0x16, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x7c, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6e, 0x72, 0x2d, 0x69, 0x6f, 0x2f, 0x73,
	0x6f, 0x6e, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x76, 0x31, 0x3b, 0x73,
	0x76, 0x63, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x53, 0x76, 0x63,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x53, 0x76, 0x63, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x12, 0x53,
	0x76, 0x63, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x07, 0x53, 0x76, 0x63, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_svc_v1_events_proto_rawDescOnce sync.Once
	file_svc_v1_events_proto_rawDescData = file_svc_v1_events_proto_rawDesc
)

func file_svc_v1_events_proto_rawDescGZIP() []byte {
	file_svc_v1_events_proto_rawDescOnce.Do(func() {
		file_svc_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_svc_v1_events_proto_rawDescData)
	})
	return file_svc_v1_events_proto_rawDescData
}

var file_svc_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_svc_v1_events_proto_goTypes = []interface{}{
	(*EventDomainVerificationInitiated)(nil), // 0: svc.v1.EventDomainVerificationInitiated
	(*EventDomainVerified)(nil),              // 1: svc.v1.EventDomainVerified
	(*EventServiceRegistered)(nil),           // 2: svc.v1.EventServiceRegistered
	(*timestamppb.Timestamp)(nil),            // 3: google.protobuf.Timestamp
}
var file_svc_v1_events_proto_depIdxs = []int32{
	3, // 0: svc.v1.EventDomainVerified.verified_at:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_svc_v1_events_proto_init() }
func file_svc_v1_events_proto_init() {
	if File_svc_v1_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svc_v1_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDomainVerificationInitiated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_v1_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDomainVerified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svc_v1_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventServiceRegistered); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svc_v1_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_svc_v1_events_proto_goTypes,
		DependencyIndexes: file_svc_v1_events_proto_depIdxs,
		MessageInfos:      file_svc_v1_events_proto_msgTypes,
	}.Build()
	File_svc_v1_events_proto = out.File
	file_svc_v1_events_proto_rawDesc = nil
	file_svc_v1_events_proto_goTypes = nil
	file_svc_v1_events_proto_depIdxs = nil
}
