open module cosmos.chain.Config

version: String
proxy_app: String
moniker: String
db_backend: String
db_dir: String
log_level: String
log_format: String
genesis_file: String
priv_validator_key_file: String
priv_validator_state_file: String
priv_validator_laddr: String
node_key_file: String
abci: String
filter_peers: Boolean

rpc: Rpc
p2p: P2p
mempool: Mempool
statesync: Statesync
blocksync: Blocksync
consensus: Consensus
storage: Storage
tx_index: TxIndex
instrumentation: Instrumentation

class Rpc {
  laddr: String
  cors_allowed_origins: Listing<Any>
  cors_allowed_methods: Listing<String>
  cors_allowed_headers: Listing<String>
  grpc_laddr: String
  grpc_max_open_connections: Number
  unsafe: Boolean
  max_open_connections: Number
  max_subscription_clients: Number
  max_subscriptions_per_client: Number
  experimental_subscription_buffer_size: Number
  experimental_websocket_write_buffer_size: Number
  experimental_close_on_slow_client: Boolean
  timeout_broadcast_tx_commit: String
  max_request_batch_size: Number
  max_body_bytes: Number
  max_header_bytes: Number
  tls_cert_file: String
  tls_key_file: String
  pprof_laddr: String
}

class P2p {
  laddr: String
  external_address: String
  seeds: String
  persistent_peers: String
  addr_book_file: String
  addr_book_strict: Boolean
  max_num_inbound_peers: Number
  max_num_outbound_peers: Number
  unconditional_peer_ids: String
  persistent_peers_max_dial_period: String
  flush_throttle_timeout: String
  max_packet_msg_payload_size: Number
  send_rate: Number
  recv_rate: Number
  pex: Boolean
  seed_mode: Boolean
  private_peer_ids: String
  allow_duplicate_ip: Boolean
  handshake_timeout: String
  dial_timeout: String
}

class Mempool {
  type: String
  recheck: Boolean
  recheck_timeout: String
  broadcast: Boolean
  wal_dir: String
  size: Number
  max_txs_bytes: Number
  cache_size: Number
  `keep-invalid-txs-in-cache`: Boolean
  max_tx_bytes: Number
  max_batch_bytes: Number
  experimental_max_gossip_connections_to_persistent_peers: Number
  experimental_max_gossip_connections_to_non_persistent_peers: Number
}

class Statesync {
  enable: Boolean
  rpc_servers: String
  trust_height: Number
  trust_hash: String
  trust_period: String
  discovery_time: String
  temp_dir: String
  chunk_request_timeout: String
  chunk_fetchers: String
}

class Blocksync {
  version: String
}

class Consensus {
  wal_file: String
  timeout_propose: String
  timeout_propose_delta: String
  timeout_prevote: String
  timeout_prevote_delta: String
  timeout_precommit: String
  timeout_precommit_delta: String
  timeout_commit: String
  double_sign_check_height: Number
  skip_timeout_commit: Boolean
  create_empty_blocks: Boolean
  create_empty_blocks_interval: String
  peer_gossip_sleep_duration: String
  peer_query_maj23_sleep_duration: String
}

class Storage {
  discard_abci_responses: Boolean
}

class TxIndex {
  indexer: String
  `psql-conn`: String
}

class Instrumentation {
  prometheus: Boolean
  prometheus_listen_addr: String
  max_open_connections: Number
  namespace: String
}

output {
  renderer = new toml.Renderer {}
}
