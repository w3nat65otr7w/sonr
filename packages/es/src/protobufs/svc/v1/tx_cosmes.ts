// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file svc/v1/tx.proto (package svc.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgInitiateDomainVerification, MsgInitiateDomainVerificationResponse, MsgRegisterService, MsgRegisterServiceResponse, MsgUpdateParams, MsgUpdateParamsResponse, MsgVerifyDomain, MsgVerifyDomainResponse } from "./tx_pb.js";

const TYPE_NAME = "svc.v1.Msg";

/**
 * UpdateParams defines a governance operation for updating the parameters.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from rpc svc.v1.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
  typeName: TYPE_NAME,
  method: "UpdateParams",
  Request: MsgUpdateParams,
  Response: MsgUpdateParamsResponse,
} as const;

/**
 * InitiateDomainVerification starts the domain verification process
 *
 * {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
 * It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".
 *
 * {{import "svc_docs.md"}}
 *
 * @generated from rpc svc.v1.Msg.InitiateDomainVerification
 */
export const MsgInitiateDomainVerificationService = {
  typeName: TYPE_NAME,
  method: "InitiateDomainVerification",
  Request: MsgInitiateDomainVerification,
  Response: MsgInitiateDomainVerificationResponse,
} as const;

/**
 * VerifyDomain completes domain verification by checking DNS TXT records
 *
 * @generated from rpc svc.v1.Msg.VerifyDomain
 */
export const MsgVerifyDomainService = {
  typeName: TYPE_NAME,
  method: "VerifyDomain",
  Request: MsgVerifyDomain,
  Response: MsgVerifyDomainResponse,
} as const;

/**
 * RegisterService registers a new service with verified domain binding
 *
 * @generated from rpc svc.v1.Msg.RegisterService
 */
export const MsgRegisterServiceService = {
  typeName: TYPE_NAME,
  method: "RegisterService",
  Request: MsgRegisterService,
  Response: MsgRegisterServiceResponse,
} as const;

