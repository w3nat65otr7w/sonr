// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file ibc/core/client/v1/tx.proto (package ibc.core.client.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Plan } from "../../../../cosmos/upgrade/v1beta1/upgrade_pb.js";
import { Params } from "./client_pb.js";

/**
 * MsgCreateClient defines a message to create an IBC client
 *
 * @generated from message ibc.core.client.v1.MsgCreateClient
 */
export class MsgCreateClient extends Message<MsgCreateClient> {
  /**
   * light client state
   *
   * @generated from field: google.protobuf.Any client_state = 1;
   */
  clientState?: Any;

  /**
   * consensus state associated with the client that corresponds to a given
   * height.
   *
   * @generated from field: google.protobuf.Any consensus_state = 2;
   */
  consensusState?: Any;

  /**
   * signer address
   *
   * @generated from field: string signer = 3;
   */
  signer = "";

  constructor(data?: PartialMessage<MsgCreateClient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgCreateClient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_state", kind: "message", T: Any },
    { no: 2, name: "consensus_state", kind: "message", T: Any },
    { no: 3, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateClient {
    return new MsgCreateClient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateClient {
    return new MsgCreateClient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateClient {
    return new MsgCreateClient().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateClient | PlainMessage<MsgCreateClient> | undefined, b: MsgCreateClient | PlainMessage<MsgCreateClient> | undefined): boolean {
    return proto3.util.equals(MsgCreateClient, a, b);
  }
}

/**
 * MsgCreateClientResponse defines the Msg/CreateClient response type.
 *
 * @generated from message ibc.core.client.v1.MsgCreateClientResponse
 */
export class MsgCreateClientResponse extends Message<MsgCreateClientResponse> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  constructor(data?: PartialMessage<MsgCreateClientResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgCreateClientResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateClientResponse {
    return new MsgCreateClientResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateClientResponse {
    return new MsgCreateClientResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateClientResponse {
    return new MsgCreateClientResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateClientResponse | PlainMessage<MsgCreateClientResponse> | undefined, b: MsgCreateClientResponse | PlainMessage<MsgCreateClientResponse> | undefined): boolean {
    return proto3.util.equals(MsgCreateClientResponse, a, b);
  }
}

/**
 * MsgUpdateClient defines an sdk.Msg to update a IBC client state using
 * the given client message.
 *
 * @generated from message ibc.core.client.v1.MsgUpdateClient
 */
export class MsgUpdateClient extends Message<MsgUpdateClient> {
  /**
   * client unique identifier
   *
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * client message to update the light client
   *
   * @generated from field: google.protobuf.Any client_message = 2;
   */
  clientMessage?: Any;

  /**
   * signer address
   *
   * @generated from field: string signer = 3;
   */
  signer = "";

  constructor(data?: PartialMessage<MsgUpdateClient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgUpdateClient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_message", kind: "message", T: Any },
    { no: 3, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateClient {
    return new MsgUpdateClient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateClient {
    return new MsgUpdateClient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateClient {
    return new MsgUpdateClient().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateClient | PlainMessage<MsgUpdateClient> | undefined, b: MsgUpdateClient | PlainMessage<MsgUpdateClient> | undefined): boolean {
    return proto3.util.equals(MsgUpdateClient, a, b);
  }
}

/**
 * MsgUpdateClientResponse defines the Msg/UpdateClient response type.
 *
 * @generated from message ibc.core.client.v1.MsgUpdateClientResponse
 */
export class MsgUpdateClientResponse extends Message<MsgUpdateClientResponse> {
  constructor(data?: PartialMessage<MsgUpdateClientResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgUpdateClientResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateClientResponse {
    return new MsgUpdateClientResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateClientResponse {
    return new MsgUpdateClientResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateClientResponse {
    return new MsgUpdateClientResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateClientResponse | PlainMessage<MsgUpdateClientResponse> | undefined, b: MsgUpdateClientResponse | PlainMessage<MsgUpdateClientResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateClientResponse, a, b);
  }
}

/**
 * MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client
 * state
 *
 * @generated from message ibc.core.client.v1.MsgUpgradeClient
 */
export class MsgUpgradeClient extends Message<MsgUpgradeClient> {
  /**
   * client unique identifier
   *
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * upgraded client state
   *
   * @generated from field: google.protobuf.Any client_state = 2;
   */
  clientState?: Any;

  /**
   * upgraded consensus state, only contains enough information to serve as a
   * basis of trust in update logic
   *
   * @generated from field: google.protobuf.Any consensus_state = 3;
   */
  consensusState?: Any;

  /**
   * proof that old chain committed to new client
   *
   * @generated from field: bytes proof_upgrade_client = 4;
   */
  proofUpgradeClient = new Uint8Array(0);

  /**
   * proof that old chain committed to new consensus state
   *
   * @generated from field: bytes proof_upgrade_consensus_state = 5;
   */
  proofUpgradeConsensusState = new Uint8Array(0);

  /**
   * signer address
   *
   * @generated from field: string signer = 6;
   */
  signer = "";

  constructor(data?: PartialMessage<MsgUpgradeClient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgUpgradeClient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_state", kind: "message", T: Any },
    { no: 3, name: "consensus_state", kind: "message", T: Any },
    { no: 4, name: "proof_upgrade_client", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "proof_upgrade_consensus_state", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpgradeClient {
    return new MsgUpgradeClient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpgradeClient {
    return new MsgUpgradeClient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpgradeClient {
    return new MsgUpgradeClient().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpgradeClient | PlainMessage<MsgUpgradeClient> | undefined, b: MsgUpgradeClient | PlainMessage<MsgUpgradeClient> | undefined): boolean {
    return proto3.util.equals(MsgUpgradeClient, a, b);
  }
}

/**
 * MsgUpgradeClientResponse defines the Msg/UpgradeClient response type.
 *
 * @generated from message ibc.core.client.v1.MsgUpgradeClientResponse
 */
export class MsgUpgradeClientResponse extends Message<MsgUpgradeClientResponse> {
  constructor(data?: PartialMessage<MsgUpgradeClientResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgUpgradeClientResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpgradeClientResponse {
    return new MsgUpgradeClientResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpgradeClientResponse {
    return new MsgUpgradeClientResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpgradeClientResponse {
    return new MsgUpgradeClientResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpgradeClientResponse | PlainMessage<MsgUpgradeClientResponse> | undefined, b: MsgUpgradeClientResponse | PlainMessage<MsgUpgradeClientResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpgradeClientResponse, a, b);
  }
}

/**
 * MsgRecoverClient defines the message used to recover a frozen or expired client.
 *
 * @generated from message ibc.core.client.v1.MsgRecoverClient
 */
export class MsgRecoverClient extends Message<MsgRecoverClient> {
  /**
   * the client identifier for the client to be updated if the proposal passes
   *
   * @generated from field: string subject_client_id = 1;
   */
  subjectClientId = "";

  /**
   * the substitute client identifier for the client which will replace the subject
   * client
   *
   * @generated from field: string substitute_client_id = 2;
   */
  substituteClientId = "";

  /**
   * signer address
   *
   * @generated from field: string signer = 3;
   */
  signer = "";

  constructor(data?: PartialMessage<MsgRecoverClient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgRecoverClient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subject_client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "substitute_client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRecoverClient {
    return new MsgRecoverClient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRecoverClient {
    return new MsgRecoverClient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRecoverClient {
    return new MsgRecoverClient().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRecoverClient | PlainMessage<MsgRecoverClient> | undefined, b: MsgRecoverClient | PlainMessage<MsgRecoverClient> | undefined): boolean {
    return proto3.util.equals(MsgRecoverClient, a, b);
  }
}

/**
 * MsgRecoverClientResponse defines the Msg/RecoverClient response type.
 *
 * @generated from message ibc.core.client.v1.MsgRecoverClientResponse
 */
export class MsgRecoverClientResponse extends Message<MsgRecoverClientResponse> {
  constructor(data?: PartialMessage<MsgRecoverClientResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgRecoverClientResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRecoverClientResponse {
    return new MsgRecoverClientResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRecoverClientResponse {
    return new MsgRecoverClientResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRecoverClientResponse {
    return new MsgRecoverClientResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRecoverClientResponse | PlainMessage<MsgRecoverClientResponse> | undefined, b: MsgRecoverClientResponse | PlainMessage<MsgRecoverClientResponse> | undefined): boolean {
    return proto3.util.equals(MsgRecoverClientResponse, a, b);
  }
}

/**
 * MsgIBCSoftwareUpgrade defines the message used to schedule an upgrade of an IBC client using a v1 governance proposal
 *
 * @generated from message ibc.core.client.v1.MsgIBCSoftwareUpgrade
 */
export class MsgIBCSoftwareUpgrade extends Message<MsgIBCSoftwareUpgrade> {
  /**
   * @generated from field: cosmos.upgrade.v1beta1.Plan plan = 1;
   */
  plan?: Plan;

  /**
   * An UpgradedClientState must be provided to perform an IBC breaking upgrade.
   * This will make the chain commit to the correct upgraded (self) client state
   * before the upgrade occurs, so that connecting chains can verify that the
   * new upgraded client is valid by verifying a proof on the previous version
   * of the chain. This will allow IBC connections to persist smoothly across
   * planned chain upgrades. Correspondingly, the UpgradedClientState field has been
   * deprecated in the Cosmos SDK to allow for this logic to exist solely in
   * the 02-client module.
   *
   * @generated from field: google.protobuf.Any upgraded_client_state = 2;
   */
  upgradedClientState?: Any;

  /**
   * signer address
   *
   * @generated from field: string signer = 3;
   */
  signer = "";

  constructor(data?: PartialMessage<MsgIBCSoftwareUpgrade>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgIBCSoftwareUpgrade";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "plan", kind: "message", T: Plan },
    { no: 2, name: "upgraded_client_state", kind: "message", T: Any },
    { no: 3, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgIBCSoftwareUpgrade {
    return new MsgIBCSoftwareUpgrade().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgIBCSoftwareUpgrade {
    return new MsgIBCSoftwareUpgrade().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgIBCSoftwareUpgrade {
    return new MsgIBCSoftwareUpgrade().fromJsonString(jsonString, options);
  }

  static equals(a: MsgIBCSoftwareUpgrade | PlainMessage<MsgIBCSoftwareUpgrade> | undefined, b: MsgIBCSoftwareUpgrade | PlainMessage<MsgIBCSoftwareUpgrade> | undefined): boolean {
    return proto3.util.equals(MsgIBCSoftwareUpgrade, a, b);
  }
}

/**
 * MsgIBCSoftwareUpgradeResponse defines the Msg/IBCSoftwareUpgrade response type.
 *
 * @generated from message ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse
 */
export class MsgIBCSoftwareUpgradeResponse extends Message<MsgIBCSoftwareUpgradeResponse> {
  constructor(data?: PartialMessage<MsgIBCSoftwareUpgradeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgIBCSoftwareUpgradeResponse {
    return new MsgIBCSoftwareUpgradeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgIBCSoftwareUpgradeResponse {
    return new MsgIBCSoftwareUpgradeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgIBCSoftwareUpgradeResponse {
    return new MsgIBCSoftwareUpgradeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgIBCSoftwareUpgradeResponse | PlainMessage<MsgIBCSoftwareUpgradeResponse> | undefined, b: MsgIBCSoftwareUpgradeResponse | PlainMessage<MsgIBCSoftwareUpgradeResponse> | undefined): boolean {
    return proto3.util.equals(MsgIBCSoftwareUpgradeResponse, a, b);
  }
}

/**
 * MsgUpdateParams defines the sdk.Msg type to update the client parameters.
 *
 * @generated from message ibc.core.client.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * signer address
   *
   * @generated from field: string signer = 1;
   */
  signer = "";

  /**
   * params defines the client parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: ibc.core.client.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * MsgUpdateParamsResponse defines the MsgUpdateParams response type.
 *
 * @generated from message ibc.core.client.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

/**
 * MsgDeleteClientCreator defines a message to delete the client creator of a client
 *
 * @generated from message ibc.core.client.v1.MsgDeleteClientCreator
 */
export class MsgDeleteClientCreator extends Message<MsgDeleteClientCreator> {
  /**
   * client identifier
   *
   * @generated from field: string client_id = 1;
   */
  clientId = "";

  /**
   * signer address
   *
   * @generated from field: string signer = 2;
   */
  signer = "";

  constructor(data?: PartialMessage<MsgDeleteClientCreator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgDeleteClientCreator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteClientCreator {
    return new MsgDeleteClientCreator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteClientCreator {
    return new MsgDeleteClientCreator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteClientCreator {
    return new MsgDeleteClientCreator().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteClientCreator | PlainMessage<MsgDeleteClientCreator> | undefined, b: MsgDeleteClientCreator | PlainMessage<MsgDeleteClientCreator> | undefined): boolean {
    return proto3.util.equals(MsgDeleteClientCreator, a, b);
  }
}

/**
 * MsgDeleteClientCreatorResponse defines the Msg/DeleteClientCreator response type.
 *
 * @generated from message ibc.core.client.v1.MsgDeleteClientCreatorResponse
 */
export class MsgDeleteClientCreatorResponse extends Message<MsgDeleteClientCreatorResponse> {
  constructor(data?: PartialMessage<MsgDeleteClientCreatorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.core.client.v1.MsgDeleteClientCreatorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeleteClientCreatorResponse {
    return new MsgDeleteClientCreatorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeleteClientCreatorResponse {
    return new MsgDeleteClientCreatorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeleteClientCreatorResponse {
    return new MsgDeleteClientCreatorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeleteClientCreatorResponse | PlainMessage<MsgDeleteClientCreatorResponse> | undefined, b: MsgDeleteClientCreatorResponse | PlainMessage<MsgDeleteClientCreatorResponse> | undefined): boolean {
    return proto3.util.equals(MsgDeleteClientCreatorResponse, a, b);
  }
}

