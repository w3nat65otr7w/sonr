// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file ibc/applications/rate_limiting/v1/tx.proto (package ibc.applications.rate_limiting.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgAddRateLimit, MsgAddRateLimitResponse, MsgRemoveRateLimit, MsgRemoveRateLimitResponse, MsgResetRateLimit, MsgResetRateLimitResponse, MsgUpdateRateLimit, MsgUpdateRateLimitResponse } from "./tx_pb.js";

const TYPE_NAME = "ibc.applications.rate_limiting.v1.Msg";

/**
 * Gov tx to add a new rate limit
 *
 * @generated from rpc ibc.applications.rate_limiting.v1.Msg.AddRateLimit
 */
export const MsgAddRateLimitService = {
  typeName: TYPE_NAME,
  method: "AddRateLimit",
  Request: MsgAddRateLimit,
  Response: MsgAddRateLimitResponse,
} as const;

/**
 * Gov tx to update an existing rate limit
 *
 * @generated from rpc ibc.applications.rate_limiting.v1.Msg.UpdateRateLimit
 */
export const MsgUpdateRateLimitService = {
  typeName: TYPE_NAME,
  method: "UpdateRateLimit",
  Request: MsgUpdateRateLimit,
  Response: MsgUpdateRateLimitResponse,
} as const;

/**
 * Gov tx to remove a rate limit
 *
 * @generated from rpc ibc.applications.rate_limiting.v1.Msg.RemoveRateLimit
 */
export const MsgRemoveRateLimitService = {
  typeName: TYPE_NAME,
  method: "RemoveRateLimit",
  Request: MsgRemoveRateLimit,
  Response: MsgRemoveRateLimitResponse,
} as const;

/**
 * Gov tx to reset the flow on a rate limit
 *
 * @generated from rpc ibc.applications.rate_limiting.v1.Msg.ResetRateLimit
 */
export const MsgResetRateLimitService = {
  typeName: TYPE_NAME,
  method: "ResetRateLimit",
  Request: MsgResetRateLimit,
  Response: MsgResetRateLimitResponse,
} as const;

