// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file ibc/applications/rate_limiting/v1/query.proto (package ibc.applications.rate_limiting.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryAllBlacklistedDenomsRequest, QueryAllBlacklistedDenomsResponse, QueryAllRateLimitsRequest, QueryAllRateLimitsResponse, QueryAllWhitelistedAddressesRequest, QueryAllWhitelistedAddressesResponse, QueryRateLimitRequest, QueryRateLimitResponse, QueryRateLimitsByChainIDRequest, QueryRateLimitsByChainIDResponse, QueryRateLimitsByChannelOrClientIDRequest, QueryRateLimitsByChannelOrClientIDResponse } from "./query_pb.js";

const TYPE_NAME = "ibc.applications.rate_limiting.v1.Query";

/**
 * Queries all rate limits
 *
 * @generated from rpc ibc.applications.rate_limiting.v1.Query.AllRateLimits
 */
export const QueryAllRateLimitsService = {
  typeName: TYPE_NAME,
  method: "AllRateLimits",
  Request: QueryAllRateLimitsRequest,
  Response: QueryAllRateLimitsResponse,
} as const;

/**
 * Queries a specific rate limit by channel ID and denom
 * Ex:
 *  - /ratelimit/{channel_or_client_id}/by_denom?denom={denom}
 *
 * @generated from rpc ibc.applications.rate_limiting.v1.Query.RateLimit
 */
export const QueryRateLimitService = {
  typeName: TYPE_NAME,
  method: "RateLimit",
  Request: QueryRateLimitRequest,
  Response: QueryRateLimitResponse,
} as const;

/**
 * Queries all the rate limits for a given chain
 *
 * @generated from rpc ibc.applications.rate_limiting.v1.Query.RateLimitsByChainID
 */
export const QueryRateLimitsByChainIDService = {
  typeName: TYPE_NAME,
  method: "RateLimitsByChainID",
  Request: QueryRateLimitsByChainIDRequest,
  Response: QueryRateLimitsByChainIDResponse,
} as const;

/**
 * Queries all the rate limits for a given channel ID
 *
 * @generated from rpc ibc.applications.rate_limiting.v1.Query.RateLimitsByChannelOrClientID
 */
export const QueryRateLimitsByChannelOrClientIDService = {
  typeName: TYPE_NAME,
  method: "RateLimitsByChannelOrClientID",
  Request: QueryRateLimitsByChannelOrClientIDRequest,
  Response: QueryRateLimitsByChannelOrClientIDResponse,
} as const;

/**
 * Queries all blacklisted denoms
 *
 * @generated from rpc ibc.applications.rate_limiting.v1.Query.AllBlacklistedDenoms
 */
export const QueryAllBlacklistedDenomsService = {
  typeName: TYPE_NAME,
  method: "AllBlacklistedDenoms",
  Request: QueryAllBlacklistedDenomsRequest,
  Response: QueryAllBlacklistedDenomsResponse,
} as const;

/**
 * Queries all whitelisted address pairs
 *
 * @generated from rpc ibc.applications.rate_limiting.v1.Query.AllWhitelistedAddresses
 */
export const QueryAllWhitelistedAddressesService = {
  typeName: TYPE_NAME,
  method: "AllWhitelistedAddresses",
  Request: QueryAllWhitelistedAddressesRequest,
  Response: QueryAllWhitelistedAddressesResponse,
} as const;

