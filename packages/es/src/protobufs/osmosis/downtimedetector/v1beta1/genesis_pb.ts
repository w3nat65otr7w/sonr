// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file osmosis/downtimedetector/v1beta1/genesis.proto (package osmosis.downtimedetector.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Downtime } from "./downtime_duration_pb.js";

/**
 * @generated from message osmosis.downtimedetector.v1beta1.GenesisDowntimeEntry
 */
export class GenesisDowntimeEntry extends Message<GenesisDowntimeEntry> {
  /**
   * @generated from field: osmosis.downtimedetector.v1beta1.Downtime duration = 1;
   */
  duration = Downtime.DURATION_30S;

  /**
   * @generated from field: google.protobuf.Timestamp last_downtime = 2;
   */
  lastDowntime?: Timestamp;

  constructor(data?: PartialMessage<GenesisDowntimeEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "osmosis.downtimedetector.v1beta1.GenesisDowntimeEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "duration", kind: "enum", T: proto3.getEnumType(Downtime) },
    { no: 2, name: "last_downtime", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenesisDowntimeEntry {
    return new GenesisDowntimeEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenesisDowntimeEntry {
    return new GenesisDowntimeEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenesisDowntimeEntry {
    return new GenesisDowntimeEntry().fromJsonString(jsonString, options);
  }

  static equals(a: GenesisDowntimeEntry | PlainMessage<GenesisDowntimeEntry> | undefined, b: GenesisDowntimeEntry | PlainMessage<GenesisDowntimeEntry> | undefined): boolean {
    return proto3.util.equals(GenesisDowntimeEntry, a, b);
  }
}

/**
 * GenesisState defines the twap module's genesis state.
 *
 * @generated from message osmosis.downtimedetector.v1beta1.GenesisState
 */
export class GenesisState extends Message<GenesisState> {
  /**
   * @generated from field: repeated osmosis.downtimedetector.v1beta1.GenesisDowntimeEntry downtimes = 1;
   */
  downtimes: GenesisDowntimeEntry[] = [];

  /**
   * @generated from field: google.protobuf.Timestamp last_block_time = 2;
   */
  lastBlockTime?: Timestamp;

  constructor(data?: PartialMessage<GenesisState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "osmosis.downtimedetector.v1beta1.GenesisState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "downtimes", kind: "message", T: GenesisDowntimeEntry, repeated: true },
    { no: 2, name: "last_block_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenesisState {
    return new GenesisState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJsonString(jsonString, options);
  }

  static equals(a: GenesisState | PlainMessage<GenesisState> | undefined, b: GenesisState | PlainMessage<GenesisState> | undefined): boolean {
    return proto3.util.equals(GenesisState, a, b);
  }
}

