// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file osmosis/protorev/v1beta1/gov.proto (package osmosis.protorev.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * SetProtoRevEnabledProposal is a gov Content type to update whether the
 * protorev module is enabled
 *
 * @generated from message osmosis.protorev.v1beta1.SetProtoRevEnabledProposal
 */
export class SetProtoRevEnabledProposal extends Message<SetProtoRevEnabledProposal> {
  /**
   * @generated from field: string title = 1;
   */
  title = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  constructor(data?: PartialMessage<SetProtoRevEnabledProposal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "osmosis.protorev.v1beta1.SetProtoRevEnabledProposal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetProtoRevEnabledProposal {
    return new SetProtoRevEnabledProposal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetProtoRevEnabledProposal {
    return new SetProtoRevEnabledProposal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetProtoRevEnabledProposal {
    return new SetProtoRevEnabledProposal().fromJsonString(jsonString, options);
  }

  static equals(a: SetProtoRevEnabledProposal | PlainMessage<SetProtoRevEnabledProposal> | undefined, b: SetProtoRevEnabledProposal | PlainMessage<SetProtoRevEnabledProposal> | undefined): boolean {
    return proto3.util.equals(SetProtoRevEnabledProposal, a, b);
  }
}

/**
 * SetProtoRevAdminAccountProposal is a gov Content type to set the admin
 * account that will receive permissions to alter hot routes and set the
 * developer address that will be receiving a share of profits from the module
 *
 * @generated from message osmosis.protorev.v1beta1.SetProtoRevAdminAccountProposal
 */
export class SetProtoRevAdminAccountProposal extends Message<SetProtoRevAdminAccountProposal> {
  /**
   * @generated from field: string title = 1;
   */
  title = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: string account = 3;
   */
  account = "";

  constructor(data?: PartialMessage<SetProtoRevAdminAccountProposal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "osmosis.protorev.v1beta1.SetProtoRevAdminAccountProposal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "account", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetProtoRevAdminAccountProposal {
    return new SetProtoRevAdminAccountProposal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetProtoRevAdminAccountProposal {
    return new SetProtoRevAdminAccountProposal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetProtoRevAdminAccountProposal {
    return new SetProtoRevAdminAccountProposal().fromJsonString(jsonString, options);
  }

  static equals(a: SetProtoRevAdminAccountProposal | PlainMessage<SetProtoRevAdminAccountProposal> | undefined, b: SetProtoRevAdminAccountProposal | PlainMessage<SetProtoRevAdminAccountProposal> | undefined): boolean {
    return proto3.util.equals(SetProtoRevAdminAccountProposal, a, b);
  }
}

