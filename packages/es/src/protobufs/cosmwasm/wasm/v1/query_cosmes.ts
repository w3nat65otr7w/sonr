// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file cosmwasm/wasm/v1/query.proto (package cosmwasm.wasm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryAllContractStateRequest, QueryAllContractStateResponse, QueryBuildAddressRequest, QueryBuildAddressResponse, QueryCodeInfoRequest, QueryCodeInfoResponse, QueryCodeRequest, QueryCodeResponse, QueryCodesRequest, QueryCodesResponse, QueryContractHistoryRequest, QueryContractHistoryResponse, QueryContractInfoRequest, QueryContractInfoResponse, QueryContractsByCodeRequest, QueryContractsByCodeResponse, QueryContractsByCreatorRequest, QueryContractsByCreatorResponse, QueryParamsRequest, QueryParamsResponse, QueryPinnedCodesRequest, QueryPinnedCodesResponse, QueryRawContractStateRequest, QueryRawContractStateResponse, QuerySmartContractStateRequest, QuerySmartContractStateResponse, QueryWasmLimitsConfigRequest, QueryWasmLimitsConfigResponse } from "./query_pb.js";

const TYPE_NAME = "cosmwasm.wasm.v1.Query";

/**
 * ContractInfo gets the contract meta data
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.ContractInfo
 */
export const QueryContractInfoService = {
  typeName: TYPE_NAME,
  method: "ContractInfo",
  Request: QueryContractInfoRequest,
  Response: QueryContractInfoResponse,
} as const;

/**
 * ContractHistory gets the contract code history
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.ContractHistory
 */
export const QueryContractHistoryService = {
  typeName: TYPE_NAME,
  method: "ContractHistory",
  Request: QueryContractHistoryRequest,
  Response: QueryContractHistoryResponse,
} as const;

/**
 * ContractsByCode lists all smart contracts for a code id
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.ContractsByCode
 */
export const QueryContractsByCodeService = {
  typeName: TYPE_NAME,
  method: "ContractsByCode",
  Request: QueryContractsByCodeRequest,
  Response: QueryContractsByCodeResponse,
} as const;

/**
 * AllContractState gets all raw store data for a single contract
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.AllContractState
 */
export const QueryAllContractStateService = {
  typeName: TYPE_NAME,
  method: "AllContractState",
  Request: QueryAllContractStateRequest,
  Response: QueryAllContractStateResponse,
} as const;

/**
 * RawContractState gets single key from the raw store data of a contract
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.RawContractState
 */
export const QueryRawContractStateService = {
  typeName: TYPE_NAME,
  method: "RawContractState",
  Request: QueryRawContractStateRequest,
  Response: QueryRawContractStateResponse,
} as const;

/**
 * SmartContractState get smart query result from the contract
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.SmartContractState
 */
export const QuerySmartContractStateService = {
  typeName: TYPE_NAME,
  method: "SmartContractState",
  Request: QuerySmartContractStateRequest,
  Response: QuerySmartContractStateResponse,
} as const;

/**
 * Code gets the binary code and metadata for a single wasm code
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.Code
 */
export const QueryCodeService = {
  typeName: TYPE_NAME,
  method: "Code",
  Request: QueryCodeRequest,
  Response: QueryCodeResponse,
} as const;

/**
 * Codes gets the metadata for all stored wasm codes
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.Codes
 */
export const QueryCodesService = {
  typeName: TYPE_NAME,
  method: "Codes",
  Request: QueryCodesRequest,
  Response: QueryCodesResponse,
} as const;

/**
 * CodeInfo gets the metadata for a single wasm code
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.CodeInfo
 */
export const QueryCodeInfoService = {
  typeName: TYPE_NAME,
  method: "CodeInfo",
  Request: QueryCodeInfoRequest,
  Response: QueryCodeInfoResponse,
} as const;

/**
 * PinnedCodes gets the pinned code ids
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.PinnedCodes
 */
export const QueryPinnedCodesService = {
  typeName: TYPE_NAME,
  method: "PinnedCodes",
  Request: QueryPinnedCodesRequest,
  Response: QueryPinnedCodesResponse,
} as const;

/**
 * Params gets the module params
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * ContractsByCreator gets the contracts by creator
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.ContractsByCreator
 */
export const QueryContractsByCreatorService = {
  typeName: TYPE_NAME,
  method: "ContractsByCreator",
  Request: QueryContractsByCreatorRequest,
  Response: QueryContractsByCreatorResponse,
} as const;

/**
 * WasmLimitsConfig gets the configured limits for static validation of Wasm
 * files, encoded in JSON.
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.WasmLimitsConfig
 */
export const QueryWasmLimitsConfigService = {
  typeName: TYPE_NAME,
  method: "WasmLimitsConfig",
  Request: QueryWasmLimitsConfigRequest,
  Response: QueryWasmLimitsConfigResponse,
} as const;

/**
 * BuildAddress builds a contract address
 *
 * @generated from rpc cosmwasm.wasm.v1.Query.BuildAddress
 */
export const QueryBuildAddressService = {
  typeName: TYPE_NAME,
  method: "BuildAddress",
  Request: QueryBuildAddressRequest,
  Response: QueryBuildAddressResponse,
} as const;

