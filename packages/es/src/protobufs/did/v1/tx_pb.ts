// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file did/v1/tx.proto (package did.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params } from "./genesis_pb.js";
import { DIDDocument, VerifiableCredential } from "./state_pb.js";
import { Service, VerificationMethod, WebAuthnCredential } from "./types_pb.js";

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message did.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address of the governance account.
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * params defines the parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: did.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message did.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

/**
 * MsgCreateDID creates a new DID document
 *
 * @generated from message did.v1.MsgCreateDID
 */
export class MsgCreateDID extends Message<MsgCreateDID> {
  /**
   * controller is the address creating the DID
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  /**
   * did_document is the DID document to create
   *
   * @generated from field: did.v1.DIDDocument did_document = 2;
   */
  didDocument?: DIDDocument;

  constructor(data?: PartialMessage<MsgCreateDID>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgCreateDID";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "did_document", kind: "message", T: DIDDocument },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateDID {
    return new MsgCreateDID().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateDID {
    return new MsgCreateDID().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateDID {
    return new MsgCreateDID().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateDID | PlainMessage<MsgCreateDID> | undefined, b: MsgCreateDID | PlainMessage<MsgCreateDID> | undefined): boolean {
    return proto3.util.equals(MsgCreateDID, a, b);
  }
}

/**
 * MsgCreateDIDResponse defines the response for MsgCreateDID
 *
 * @generated from message did.v1.MsgCreateDIDResponse
 */
export class MsgCreateDIDResponse extends Message<MsgCreateDIDResponse> {
  /**
   * did is the created DID identifier
   *
   * @generated from field: string did = 1;
   */
  did = "";

  /**
   * vault_id is the ID of the auto-created vault (optional)
   *
   * @generated from field: string vault_id = 2;
   */
  vaultId = "";

  /**
   * vault_public_key is the public key of the auto-created vault (optional)
   *
   * @generated from field: bytes vault_public_key = 3;
   */
  vaultPublicKey = new Uint8Array(0);

  /**
   * enclave_id is the enclave ID of the auto-created vault (optional)
   *
   * @generated from field: string enclave_id = 4;
   */
  enclaveId = "";

  constructor(data?: PartialMessage<MsgCreateDIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgCreateDIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "did", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "vault_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "vault_public_key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "enclave_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateDIDResponse {
    return new MsgCreateDIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateDIDResponse {
    return new MsgCreateDIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateDIDResponse {
    return new MsgCreateDIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateDIDResponse | PlainMessage<MsgCreateDIDResponse> | undefined, b: MsgCreateDIDResponse | PlainMessage<MsgCreateDIDResponse> | undefined): boolean {
    return proto3.util.equals(MsgCreateDIDResponse, a, b);
  }
}

/**
 * MsgUpdateDID updates an existing DID document
 *
 * @generated from message did.v1.MsgUpdateDID
 */
export class MsgUpdateDID extends Message<MsgUpdateDID> {
  /**
   * controller is the address updating the DID
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  /**
   * did is the DID to update
   *
   * @generated from field: string did = 2;
   */
  did = "";

  /**
   * did_document is the updated DID document
   *
   * @generated from field: did.v1.DIDDocument did_document = 3;
   */
  didDocument?: DIDDocument;

  constructor(data?: PartialMessage<MsgUpdateDID>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgUpdateDID";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "did", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "did_document", kind: "message", T: DIDDocument },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateDID {
    return new MsgUpdateDID().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateDID {
    return new MsgUpdateDID().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateDID {
    return new MsgUpdateDID().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateDID | PlainMessage<MsgUpdateDID> | undefined, b: MsgUpdateDID | PlainMessage<MsgUpdateDID> | undefined): boolean {
    return proto3.util.equals(MsgUpdateDID, a, b);
  }
}

/**
 * MsgUpdateDIDResponse defines the response for MsgUpdateDID
 *
 * @generated from message did.v1.MsgUpdateDIDResponse
 */
export class MsgUpdateDIDResponse extends Message<MsgUpdateDIDResponse> {
  constructor(data?: PartialMessage<MsgUpdateDIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgUpdateDIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateDIDResponse {
    return new MsgUpdateDIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateDIDResponse {
    return new MsgUpdateDIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateDIDResponse {
    return new MsgUpdateDIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateDIDResponse | PlainMessage<MsgUpdateDIDResponse> | undefined, b: MsgUpdateDIDResponse | PlainMessage<MsgUpdateDIDResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateDIDResponse, a, b);
  }
}

/**
 * MsgDeactivateDID deactivates a DID document
 *
 * @generated from message did.v1.MsgDeactivateDID
 */
export class MsgDeactivateDID extends Message<MsgDeactivateDID> {
  /**
   * controller is the address deactivating the DID
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  /**
   * did is the DID to deactivate
   *
   * @generated from field: string did = 2;
   */
  did = "";

  constructor(data?: PartialMessage<MsgDeactivateDID>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgDeactivateDID";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "did", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeactivateDID {
    return new MsgDeactivateDID().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeactivateDID {
    return new MsgDeactivateDID().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeactivateDID {
    return new MsgDeactivateDID().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeactivateDID | PlainMessage<MsgDeactivateDID> | undefined, b: MsgDeactivateDID | PlainMessage<MsgDeactivateDID> | undefined): boolean {
    return proto3.util.equals(MsgDeactivateDID, a, b);
  }
}

/**
 * MsgDeactivateDIDResponse defines the response for MsgDeactivateDID
 *
 * @generated from message did.v1.MsgDeactivateDIDResponse
 */
export class MsgDeactivateDIDResponse extends Message<MsgDeactivateDIDResponse> {
  constructor(data?: PartialMessage<MsgDeactivateDIDResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgDeactivateDIDResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgDeactivateDIDResponse {
    return new MsgDeactivateDIDResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgDeactivateDIDResponse {
    return new MsgDeactivateDIDResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgDeactivateDIDResponse {
    return new MsgDeactivateDIDResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgDeactivateDIDResponse | PlainMessage<MsgDeactivateDIDResponse> | undefined, b: MsgDeactivateDIDResponse | PlainMessage<MsgDeactivateDIDResponse> | undefined): boolean {
    return proto3.util.equals(MsgDeactivateDIDResponse, a, b);
  }
}

/**
 * MsgAddVerificationMethod adds a verification method to a DID document
 *
 * @generated from message did.v1.MsgAddVerificationMethod
 */
export class MsgAddVerificationMethod extends Message<MsgAddVerificationMethod> {
  /**
   * controller is the address adding the verification method
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  /**
   * did is the DID to add the verification method to
   *
   * @generated from field: string did = 2;
   */
  did = "";

  /**
   * verification_method is the verification method to add
   *
   * @generated from field: did.v1.VerificationMethod verification_method = 3;
   */
  verificationMethod?: VerificationMethod;

  /**
   * relationships specifies which verification relationships to add
   *
   * @generated from field: repeated string relationships = 4;
   */
  relationships: string[] = [];

  constructor(data?: PartialMessage<MsgAddVerificationMethod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgAddVerificationMethod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "did", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "verification_method", kind: "message", T: VerificationMethod },
    { no: 4, name: "relationships", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddVerificationMethod {
    return new MsgAddVerificationMethod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddVerificationMethod {
    return new MsgAddVerificationMethod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddVerificationMethod {
    return new MsgAddVerificationMethod().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddVerificationMethod | PlainMessage<MsgAddVerificationMethod> | undefined, b: MsgAddVerificationMethod | PlainMessage<MsgAddVerificationMethod> | undefined): boolean {
    return proto3.util.equals(MsgAddVerificationMethod, a, b);
  }
}

/**
 * MsgAddVerificationMethodResponse defines the response for
 * MsgAddVerificationMethod
 *
 * @generated from message did.v1.MsgAddVerificationMethodResponse
 */
export class MsgAddVerificationMethodResponse extends Message<MsgAddVerificationMethodResponse> {
  constructor(data?: PartialMessage<MsgAddVerificationMethodResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgAddVerificationMethodResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddVerificationMethodResponse {
    return new MsgAddVerificationMethodResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddVerificationMethodResponse {
    return new MsgAddVerificationMethodResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddVerificationMethodResponse {
    return new MsgAddVerificationMethodResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddVerificationMethodResponse | PlainMessage<MsgAddVerificationMethodResponse> | undefined, b: MsgAddVerificationMethodResponse | PlainMessage<MsgAddVerificationMethodResponse> | undefined): boolean {
    return proto3.util.equals(MsgAddVerificationMethodResponse, a, b);
  }
}

/**
 * MsgRemoveVerificationMethod removes a verification method from a DID document
 *
 * @generated from message did.v1.MsgRemoveVerificationMethod
 */
export class MsgRemoveVerificationMethod extends Message<MsgRemoveVerificationMethod> {
  /**
   * controller is the address removing the verification method
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  /**
   * did is the DID to remove the verification method from
   *
   * @generated from field: string did = 2;
   */
  did = "";

  /**
   * verification_method_id is the ID of the verification method to remove
   *
   * @generated from field: string verification_method_id = 3;
   */
  verificationMethodId = "";

  constructor(data?: PartialMessage<MsgRemoveVerificationMethod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgRemoveVerificationMethod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "did", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "verification_method_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveVerificationMethod {
    return new MsgRemoveVerificationMethod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveVerificationMethod {
    return new MsgRemoveVerificationMethod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveVerificationMethod {
    return new MsgRemoveVerificationMethod().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveVerificationMethod | PlainMessage<MsgRemoveVerificationMethod> | undefined, b: MsgRemoveVerificationMethod | PlainMessage<MsgRemoveVerificationMethod> | undefined): boolean {
    return proto3.util.equals(MsgRemoveVerificationMethod, a, b);
  }
}

/**
 * MsgRemoveVerificationMethodResponse defines the response for
 * MsgRemoveVerificationMethod
 *
 * @generated from message did.v1.MsgRemoveVerificationMethodResponse
 */
export class MsgRemoveVerificationMethodResponse extends Message<MsgRemoveVerificationMethodResponse> {
  constructor(data?: PartialMessage<MsgRemoveVerificationMethodResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgRemoveVerificationMethodResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveVerificationMethodResponse {
    return new MsgRemoveVerificationMethodResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveVerificationMethodResponse {
    return new MsgRemoveVerificationMethodResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveVerificationMethodResponse {
    return new MsgRemoveVerificationMethodResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveVerificationMethodResponse | PlainMessage<MsgRemoveVerificationMethodResponse> | undefined, b: MsgRemoveVerificationMethodResponse | PlainMessage<MsgRemoveVerificationMethodResponse> | undefined): boolean {
    return proto3.util.equals(MsgRemoveVerificationMethodResponse, a, b);
  }
}

/**
 * MsgAddService adds a service endpoint to a DID document
 *
 * @generated from message did.v1.MsgAddService
 */
export class MsgAddService extends Message<MsgAddService> {
  /**
   * controller is the address adding the service
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  /**
   * did is the DID to add the service to
   *
   * @generated from field: string did = 2;
   */
  did = "";

  /**
   * service is the service to add
   *
   * @generated from field: did.v1.Service service = 3;
   */
  service?: Service;

  constructor(data?: PartialMessage<MsgAddService>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgAddService";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "did", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "service", kind: "message", T: Service },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddService {
    return new MsgAddService().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddService {
    return new MsgAddService().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddService {
    return new MsgAddService().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddService | PlainMessage<MsgAddService> | undefined, b: MsgAddService | PlainMessage<MsgAddService> | undefined): boolean {
    return proto3.util.equals(MsgAddService, a, b);
  }
}

/**
 * MsgAddServiceResponse defines the response for MsgAddService
 *
 * @generated from message did.v1.MsgAddServiceResponse
 */
export class MsgAddServiceResponse extends Message<MsgAddServiceResponse> {
  constructor(data?: PartialMessage<MsgAddServiceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgAddServiceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddServiceResponse {
    return new MsgAddServiceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddServiceResponse {
    return new MsgAddServiceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddServiceResponse {
    return new MsgAddServiceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddServiceResponse | PlainMessage<MsgAddServiceResponse> | undefined, b: MsgAddServiceResponse | PlainMessage<MsgAddServiceResponse> | undefined): boolean {
    return proto3.util.equals(MsgAddServiceResponse, a, b);
  }
}

/**
 * MsgRemoveService removes a service endpoint from a DID document
 *
 * @generated from message did.v1.MsgRemoveService
 */
export class MsgRemoveService extends Message<MsgRemoveService> {
  /**
   * controller is the address removing the service
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  /**
   * did is the DID to remove the service from
   *
   * @generated from field: string did = 2;
   */
  did = "";

  /**
   * service_id is the ID of the service to remove
   *
   * @generated from field: string service_id = 3;
   */
  serviceId = "";

  constructor(data?: PartialMessage<MsgRemoveService>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgRemoveService";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "did", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "service_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveService {
    return new MsgRemoveService().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveService {
    return new MsgRemoveService().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveService {
    return new MsgRemoveService().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveService | PlainMessage<MsgRemoveService> | undefined, b: MsgRemoveService | PlainMessage<MsgRemoveService> | undefined): boolean {
    return proto3.util.equals(MsgRemoveService, a, b);
  }
}

/**
 * MsgRemoveServiceResponse defines the response for MsgRemoveService
 *
 * @generated from message did.v1.MsgRemoveServiceResponse
 */
export class MsgRemoveServiceResponse extends Message<MsgRemoveServiceResponse> {
  constructor(data?: PartialMessage<MsgRemoveServiceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgRemoveServiceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveServiceResponse {
    return new MsgRemoveServiceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveServiceResponse {
    return new MsgRemoveServiceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveServiceResponse {
    return new MsgRemoveServiceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveServiceResponse | PlainMessage<MsgRemoveServiceResponse> | undefined, b: MsgRemoveServiceResponse | PlainMessage<MsgRemoveServiceResponse> | undefined): boolean {
    return proto3.util.equals(MsgRemoveServiceResponse, a, b);
  }
}

/**
 * MsgIssueVerifiableCredential issues a new verifiable credential
 *
 * @generated from message did.v1.MsgIssueVerifiableCredential
 */
export class MsgIssueVerifiableCredential extends Message<MsgIssueVerifiableCredential> {
  /**
   * issuer is the address issuing the credential
   *
   * @generated from field: string issuer = 1;
   */
  issuer = "";

  /**
   * credential is the verifiable credential to issue
   *
   * @generated from field: did.v1.VerifiableCredential credential = 2;
   */
  credential?: VerifiableCredential;

  constructor(data?: PartialMessage<MsgIssueVerifiableCredential>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgIssueVerifiableCredential";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "credential", kind: "message", T: VerifiableCredential },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgIssueVerifiableCredential {
    return new MsgIssueVerifiableCredential().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgIssueVerifiableCredential {
    return new MsgIssueVerifiableCredential().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgIssueVerifiableCredential {
    return new MsgIssueVerifiableCredential().fromJsonString(jsonString, options);
  }

  static equals(a: MsgIssueVerifiableCredential | PlainMessage<MsgIssueVerifiableCredential> | undefined, b: MsgIssueVerifiableCredential | PlainMessage<MsgIssueVerifiableCredential> | undefined): boolean {
    return proto3.util.equals(MsgIssueVerifiableCredential, a, b);
  }
}

/**
 * MsgIssueVerifiableCredentialResponse defines the response for
 * MsgIssueVerifiableCredential
 *
 * @generated from message did.v1.MsgIssueVerifiableCredentialResponse
 */
export class MsgIssueVerifiableCredentialResponse extends Message<MsgIssueVerifiableCredentialResponse> {
  /**
   * credential_id is the ID of the issued credential
   *
   * @generated from field: string credential_id = 1;
   */
  credentialId = "";

  constructor(data?: PartialMessage<MsgIssueVerifiableCredentialResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgIssueVerifiableCredentialResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "credential_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgIssueVerifiableCredentialResponse {
    return new MsgIssueVerifiableCredentialResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgIssueVerifiableCredentialResponse {
    return new MsgIssueVerifiableCredentialResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgIssueVerifiableCredentialResponse {
    return new MsgIssueVerifiableCredentialResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgIssueVerifiableCredentialResponse | PlainMessage<MsgIssueVerifiableCredentialResponse> | undefined, b: MsgIssueVerifiableCredentialResponse | PlainMessage<MsgIssueVerifiableCredentialResponse> | undefined): boolean {
    return proto3.util.equals(MsgIssueVerifiableCredentialResponse, a, b);
  }
}

/**
 * MsgRevokeVerifiableCredential revokes a verifiable credential
 *
 * @generated from message did.v1.MsgRevokeVerifiableCredential
 */
export class MsgRevokeVerifiableCredential extends Message<MsgRevokeVerifiableCredential> {
  /**
   * issuer is the address revoking the credential
   *
   * @generated from field: string issuer = 1;
   */
  issuer = "";

  /**
   * credential_id is the ID of the credential to revoke
   *
   * @generated from field: string credential_id = 2;
   */
  credentialId = "";

  /**
   * revocation_reason is the reason for revocation
   *
   * @generated from field: string revocation_reason = 3;
   */
  revocationReason = "";

  constructor(data?: PartialMessage<MsgRevokeVerifiableCredential>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgRevokeVerifiableCredential";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "credential_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "revocation_reason", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRevokeVerifiableCredential {
    return new MsgRevokeVerifiableCredential().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRevokeVerifiableCredential {
    return new MsgRevokeVerifiableCredential().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRevokeVerifiableCredential {
    return new MsgRevokeVerifiableCredential().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRevokeVerifiableCredential | PlainMessage<MsgRevokeVerifiableCredential> | undefined, b: MsgRevokeVerifiableCredential | PlainMessage<MsgRevokeVerifiableCredential> | undefined): boolean {
    return proto3.util.equals(MsgRevokeVerifiableCredential, a, b);
  }
}

/**
 * MsgRevokeVerifiableCredentialResponse defines the response for
 * MsgRevokeVerifiableCredential
 *
 * @generated from message did.v1.MsgRevokeVerifiableCredentialResponse
 */
export class MsgRevokeVerifiableCredentialResponse extends Message<MsgRevokeVerifiableCredentialResponse> {
  constructor(data?: PartialMessage<MsgRevokeVerifiableCredentialResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgRevokeVerifiableCredentialResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRevokeVerifiableCredentialResponse {
    return new MsgRevokeVerifiableCredentialResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRevokeVerifiableCredentialResponse {
    return new MsgRevokeVerifiableCredentialResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRevokeVerifiableCredentialResponse {
    return new MsgRevokeVerifiableCredentialResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRevokeVerifiableCredentialResponse | PlainMessage<MsgRevokeVerifiableCredentialResponse> | undefined, b: MsgRevokeVerifiableCredentialResponse | PlainMessage<MsgRevokeVerifiableCredentialResponse> | undefined): boolean {
    return proto3.util.equals(MsgRevokeVerifiableCredentialResponse, a, b);
  }
}

/**
 * MsgLinkExternalWallet links an external wallet to a DID as an assertion method
 *
 * @generated from message did.v1.MsgLinkExternalWallet
 */
export class MsgLinkExternalWallet extends Message<MsgLinkExternalWallet> {
  /**
   * controller is the address that controls the DID
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  /**
   * did is the DID to link the wallet to
   *
   * @generated from field: string did = 2;
   */
  did = "";

  /**
   * wallet_address is the external wallet address
   *
   * @generated from field: string wallet_address = 3;
   */
  walletAddress = "";

  /**
   * chain_id identifies the blockchain (e.g., "1" for Ethereum mainnet, "cosmoshub-4")
   *
   * @generated from field: string wallet_chain_id = 4;
   */
  walletChainId = "";

  /**
   * wallet_type specifies the wallet type ("ethereum", "cosmos")
   *
   * @generated from field: string wallet_type = 5;
   */
  walletType = "";

  /**
   * ownership_proof is the signature proving ownership of the wallet
   *
   * @generated from field: bytes ownership_proof = 6;
   */
  ownershipProof = new Uint8Array(0);

  /**
   * challenge is the message that was signed to create the ownership_proof
   *
   * @generated from field: bytes challenge = 7;
   */
  challenge = new Uint8Array(0);

  /**
   * verification_method_id is the ID for the new verification method
   *
   * @generated from field: string verification_method_id = 8;
   */
  verificationMethodId = "";

  constructor(data?: PartialMessage<MsgLinkExternalWallet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgLinkExternalWallet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "did", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "wallet_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "wallet_chain_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "wallet_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "ownership_proof", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "challenge", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 8, name: "verification_method_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgLinkExternalWallet {
    return new MsgLinkExternalWallet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgLinkExternalWallet {
    return new MsgLinkExternalWallet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgLinkExternalWallet {
    return new MsgLinkExternalWallet().fromJsonString(jsonString, options);
  }

  static equals(a: MsgLinkExternalWallet | PlainMessage<MsgLinkExternalWallet> | undefined, b: MsgLinkExternalWallet | PlainMessage<MsgLinkExternalWallet> | undefined): boolean {
    return proto3.util.equals(MsgLinkExternalWallet, a, b);
  }
}

/**
 * MsgLinkExternalWalletResponse defines the response for MsgLinkExternalWallet
 *
 * @generated from message did.v1.MsgLinkExternalWalletResponse
 */
export class MsgLinkExternalWalletResponse extends Message<MsgLinkExternalWalletResponse> {
  /**
   * verification_method_id is the ID of the created verification method
   *
   * @generated from field: string verification_method_id = 1;
   */
  verificationMethodId = "";

  constructor(data?: PartialMessage<MsgLinkExternalWalletResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgLinkExternalWalletResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "verification_method_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgLinkExternalWalletResponse {
    return new MsgLinkExternalWalletResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgLinkExternalWalletResponse {
    return new MsgLinkExternalWalletResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgLinkExternalWalletResponse {
    return new MsgLinkExternalWalletResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgLinkExternalWalletResponse | PlainMessage<MsgLinkExternalWalletResponse> | undefined, b: MsgLinkExternalWalletResponse | PlainMessage<MsgLinkExternalWalletResponse> | undefined): boolean {
    return proto3.util.equals(MsgLinkExternalWalletResponse, a, b);
  }
}

/**
 * MsgRegisterWebAuthnCredential registers a new WebAuthn credential and creates a DID
 *
 * @generated from message did.v1.MsgRegisterWebAuthnCredential
 */
export class MsgRegisterWebAuthnCredential extends Message<MsgRegisterWebAuthnCredential> {
  /**
   * controller is the address that will control the created DID
   *
   * @generated from field: string controller = 1;
   */
  controller = "";

  /**
   * username is the human-readable identifier for the DID
   *
   * @generated from field: string username = 2;
   */
  username = "";

  /**
   * webauthn_credential contains the WebAuthn credential data
   *
   * @generated from field: did.v1.WebAuthnCredential webauthn_credential = 3;
   */
  webauthnCredential?: WebAuthnCredential;

  /**
   * verification_method_id is the ID for the WebAuthn verification method
   *
   * @generated from field: string verification_method_id = 4;
   */
  verificationMethodId = "";

  /**
   * auto_create_vault indicates whether to automatically create a vault
   *
   * @generated from field: bool auto_create_vault = 5;
   */
  autoCreateVault = false;

  constructor(data?: PartialMessage<MsgRegisterWebAuthnCredential>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgRegisterWebAuthnCredential";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "controller", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "webauthn_credential", kind: "message", T: WebAuthnCredential },
    { no: 4, name: "verification_method_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "auto_create_vault", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRegisterWebAuthnCredential {
    return new MsgRegisterWebAuthnCredential().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRegisterWebAuthnCredential {
    return new MsgRegisterWebAuthnCredential().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRegisterWebAuthnCredential {
    return new MsgRegisterWebAuthnCredential().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRegisterWebAuthnCredential | PlainMessage<MsgRegisterWebAuthnCredential> | undefined, b: MsgRegisterWebAuthnCredential | PlainMessage<MsgRegisterWebAuthnCredential> | undefined): boolean {
    return proto3.util.equals(MsgRegisterWebAuthnCredential, a, b);
  }
}

/**
 * MsgRegisterWebAuthnCredentialResponse defines the response for MsgRegisterWebAuthnCredential
 *
 * @generated from message did.v1.MsgRegisterWebAuthnCredentialResponse
 */
export class MsgRegisterWebAuthnCredentialResponse extends Message<MsgRegisterWebAuthnCredentialResponse> {
  /**
   * did is the created DID identifier
   *
   * @generated from field: string did = 1;
   */
  did = "";

  /**
   * verification_method_id is the ID of the created verification method
   *
   * @generated from field: string verification_method_id = 2;
   */
  verificationMethodId = "";

  /**
   * vault_id is the ID of the auto-created vault (if requested)
   *
   * @generated from field: string vault_id = 3;
   */
  vaultId = "";

  /**
   * vault_public_key is the public key of the auto-created vault (if requested)
   *
   * @generated from field: bytes vault_public_key = 4;
   */
  vaultPublicKey = new Uint8Array(0);

  /**
   * enclave_id is the enclave ID of the auto-created vault (if requested)
   *
   * @generated from field: string enclave_id = 5;
   */
  enclaveId = "";

  constructor(data?: PartialMessage<MsgRegisterWebAuthnCredentialResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "did.v1.MsgRegisterWebAuthnCredentialResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "did", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "verification_method_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "vault_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "vault_public_key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "enclave_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRegisterWebAuthnCredentialResponse {
    return new MsgRegisterWebAuthnCredentialResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRegisterWebAuthnCredentialResponse {
    return new MsgRegisterWebAuthnCredentialResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRegisterWebAuthnCredentialResponse {
    return new MsgRegisterWebAuthnCredentialResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRegisterWebAuthnCredentialResponse | PlainMessage<MsgRegisterWebAuthnCredentialResponse> | undefined, b: MsgRegisterWebAuthnCredentialResponse | PlainMessage<MsgRegisterWebAuthnCredentialResponse> | undefined): boolean {
    return proto3.util.equals(MsgRegisterWebAuthnCredentialResponse, a, b);
  }
}

