// Since: cosmos-sdk 0.43

// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file cosmos/base/reflection/v2alpha1/reflection.proto (package cosmos.base.reflection.v2alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import {
  GetAuthnDescriptorRequest,
  GetAuthnDescriptorResponse,
  GetChainDescriptorRequest,
  GetChainDescriptorResponse,
  GetCodecDescriptorRequest,
  GetCodecDescriptorResponse,
  GetConfigurationDescriptorRequest,
  GetConfigurationDescriptorResponse,
  GetQueryServicesDescriptorRequest,
  GetQueryServicesDescriptorResponse,
  GetTxDescriptorRequest,
  GetTxDescriptorResponse,
} from './reflection_pb.js';

const TYPE_NAME = 'cosmos.base.reflection.v2alpha1.ReflectionService';

/**
 * GetAuthnDescriptor returns information on how to authenticate transactions in the application
 * NOTE: this RPC is still experimental and might be subject to breaking changes or removal in
 * future releases of the cosmos-sdk.
 *
 * @generated from rpc cosmos.base.reflection.v2alpha1.ReflectionService.GetAuthnDescriptor
 */
export const ReflectionServiceGetAuthnDescriptorService = {
  typeName: TYPE_NAME,
  method: 'GetAuthnDescriptor',
  Request: GetAuthnDescriptorRequest,
  Response: GetAuthnDescriptorResponse,
} as const;

/**
 * GetChainDescriptor returns the description of the chain
 *
 * @generated from rpc cosmos.base.reflection.v2alpha1.ReflectionService.GetChainDescriptor
 */
export const ReflectionServiceGetChainDescriptorService = {
  typeName: TYPE_NAME,
  method: 'GetChainDescriptor',
  Request: GetChainDescriptorRequest,
  Response: GetChainDescriptorResponse,
} as const;

/**
 * GetCodecDescriptor returns the descriptor of the codec of the application
 *
 * @generated from rpc cosmos.base.reflection.v2alpha1.ReflectionService.GetCodecDescriptor
 */
export const ReflectionServiceGetCodecDescriptorService = {
  typeName: TYPE_NAME,
  method: 'GetCodecDescriptor',
  Request: GetCodecDescriptorRequest,
  Response: GetCodecDescriptorResponse,
} as const;

/**
 * GetConfigurationDescriptor returns the descriptor for the sdk.Config of the application
 *
 * @generated from rpc cosmos.base.reflection.v2alpha1.ReflectionService.GetConfigurationDescriptor
 */
export const ReflectionServiceGetConfigurationDescriptorService = {
  typeName: TYPE_NAME,
  method: 'GetConfigurationDescriptor',
  Request: GetConfigurationDescriptorRequest,
  Response: GetConfigurationDescriptorResponse,
} as const;

/**
 * GetQueryServicesDescriptor returns the available gRPC queryable services of the application
 *
 * @generated from rpc cosmos.base.reflection.v2alpha1.ReflectionService.GetQueryServicesDescriptor
 */
export const ReflectionServiceGetQueryServicesDescriptorService = {
  typeName: TYPE_NAME,
  method: 'GetQueryServicesDescriptor',
  Request: GetQueryServicesDescriptorRequest,
  Response: GetQueryServicesDescriptorResponse,
} as const;

/**
 * GetTxDescriptor returns information on the used transaction object and available msgs that can be used
 *
 * @generated from rpc cosmos.base.reflection.v2alpha1.ReflectionService.GetTxDescriptor
 */
export const ReflectionServiceGetTxDescriptorService = {
  typeName: TYPE_NAME,
  method: 'GetTxDescriptor',
  Request: GetTxDescriptorRequest,
  Response: GetTxDescriptorResponse,
} as const;
