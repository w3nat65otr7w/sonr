// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file cosmos/tx/v1beta1/service.proto (package cosmos.tx.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import {
  BroadcastTxRequest,
  BroadcastTxResponse,
  GetBlockWithTxsRequest,
  GetBlockWithTxsResponse,
  GetTxRequest,
  GetTxResponse,
  GetTxsEventRequest,
  GetTxsEventResponse,
  SimulateRequest,
  SimulateResponse,
  TxDecodeAminoRequest,
  TxDecodeAminoResponse,
  TxDecodeRequest,
  TxDecodeResponse,
  TxEncodeAminoRequest,
  TxEncodeAminoResponse,
  TxEncodeRequest,
  TxEncodeResponse,
} from './service_pb.js';

const TYPE_NAME = 'cosmos.tx.v1beta1.Service';

/**
 * Simulate simulates executing a transaction for estimating gas usage.
 *
 * @generated from rpc cosmos.tx.v1beta1.Service.Simulate
 */
export const ServiceSimulateService = {
  typeName: TYPE_NAME,
  method: 'Simulate',
  Request: SimulateRequest,
  Response: SimulateResponse,
} as const;

/**
 * GetTx fetches a tx by hash.
 *
 * @generated from rpc cosmos.tx.v1beta1.Service.GetTx
 */
export const ServiceGetTxService = {
  typeName: TYPE_NAME,
  method: 'GetTx',
  Request: GetTxRequest,
  Response: GetTxResponse,
} as const;

/**
 * BroadcastTx broadcast transaction.
 *
 * @generated from rpc cosmos.tx.v1beta1.Service.BroadcastTx
 */
export const ServiceBroadcastTxService = {
  typeName: TYPE_NAME,
  method: 'BroadcastTx',
  Request: BroadcastTxRequest,
  Response: BroadcastTxResponse,
} as const;

/**
 * GetTxsEvent fetches txs by event.
 *
 * @generated from rpc cosmos.tx.v1beta1.Service.GetTxsEvent
 */
export const ServiceGetTxsEventService = {
  typeName: TYPE_NAME,
  method: 'GetTxsEvent',
  Request: GetTxsEventRequest,
  Response: GetTxsEventResponse,
} as const;

/**
 * GetBlockWithTxs fetches a block with decoded txs.
 *
 * Since: cosmos-sdk 0.45.2
 *
 * @generated from rpc cosmos.tx.v1beta1.Service.GetBlockWithTxs
 */
export const ServiceGetBlockWithTxsService = {
  typeName: TYPE_NAME,
  method: 'GetBlockWithTxs',
  Request: GetBlockWithTxsRequest,
  Response: GetBlockWithTxsResponse,
} as const;

/**
 * TxDecode decodes the transaction.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from rpc cosmos.tx.v1beta1.Service.TxDecode
 */
export const ServiceTxDecodeService = {
  typeName: TYPE_NAME,
  method: 'TxDecode',
  Request: TxDecodeRequest,
  Response: TxDecodeResponse,
} as const;

/**
 * TxEncode encodes the transaction.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from rpc cosmos.tx.v1beta1.Service.TxEncode
 */
export const ServiceTxEncodeService = {
  typeName: TYPE_NAME,
  method: 'TxEncode',
  Request: TxEncodeRequest,
  Response: TxEncodeResponse,
} as const;

/**
 * TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from rpc cosmos.tx.v1beta1.Service.TxEncodeAmino
 */
export const ServiceTxEncodeAminoService = {
  typeName: TYPE_NAME,
  method: 'TxEncodeAmino',
  Request: TxEncodeAminoRequest,
  Response: TxEncodeAminoResponse,
} as const;

/**
 * TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from rpc cosmos.tx.v1beta1.Service.TxDecodeAmino
 */
export const ServiceTxDecodeAminoService = {
  typeName: TYPE_NAME,
  method: 'TxDecodeAmino',
  Request: TxDecodeAminoRequest,
  Response: TxDecodeAminoResponse,
} as const;
